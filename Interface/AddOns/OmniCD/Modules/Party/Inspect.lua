local E = select(2, ...):unpack()
local P, CM = E.Party, E.Comm

local pairs, ipairs, type, wipe, concat, format, gsub = pairs, ipairs, type, table.wipe, table.concat, string.format, string.gsub
local UnitIsConnected, CanInspect, CheckInteractDistance = UnitIsConnected, CanInspect, CheckInteractDistance
local GetPvpTalentInfoByID, GetTalentInfo, GetGlyphSocketInfo = GetPvpTalentInfoByID, GetTalentInfo, GetGlyphSocketInfo
local C_SpecializationInfo_GetInspectSelectedPvpTalent = C_SpecializationInfo and C_SpecializationInfo.GetInspectSelectedPvpTalent
local C_SpecializationInfo_GetPvpTalentSlotInfo = C_SpecializationInfo and C_SpecializationInfo.GetPvpTalentSlotInfo
local C_Traits_GetNodeInfo = C_Traits and C_Traits.GetNodeInfo
local C_Soulbinds_GetConduitSpellID = C_Soulbinds and C_Soulbinds.GetConduitSpellID

local InspectQueueFrame = CreateFrame("Frame")
local InspectTooltip, tooltipData
if not E.isDF then
	InspectTooltip = CreateFrame("GameTooltip", "OmniCDInspectToolTip", nil, "GameTooltipTemplate")
	InspectTooltip:SetOwner(UIParent, "ANCHOR_NONE")
end

local LibDeflate = LibStub("LibDeflate")
local INSPECT_DELAY = 2
local INSPECT_INTERVAL = 1
local INSPECT_PAUSE_TIME = 2
local INSPECT_TIMEOUT = 180
local nextInquiryTime = 0
local elapsedTime = 0
local isPaused
local queriedGUID

local queueEntries = {}
local staleEntries = {}

CM.SERIALIZATION_VERSION = E.isDF and 2 or 1

function CM:Enable()
	if self.enabled then
		return
	end

	self.AddonPrefix = E.AddOn
	C_ChatInfo.RegisterAddonMessagePrefix(self.AddonPrefix)
	self:RegisterEvent('CHAT_MSG_ADDON')
	self:RegisterEvent('PLAYER_EQUIPMENT_CHANGED')
	self:RegisterEvent('PLAYER_LEAVING_WORLD')
	if E.isWOTLKC then
		self:RegisterEvent('PLAYER_TALENT_UPDATE')
	elseif E.preCata then
		self:RegisterEvent('CHARACTER_POINTS_CHANGED')
	else
		self:RegisterUnitEvent('PLAYER_SPECIALIZATION_CHANGED', "player")

		self:RegisterEvent('COVENANT_CHOSEN')
		self:RegisterEvent('SOULBIND_ACTIVATED')
		self:RegisterEvent('SOULBIND_NODE_LEARNED')
		self:RegisterEvent('SOULBIND_NODE_UNLEARNED')
		self:RegisterEvent('SOULBIND_NODE_UPDATED')
		self:RegisterEvent('SOULBIND_CONDUIT_INSTALLED')
		self:RegisterEvent('SOULBIND_PATH_CHANGED')
		self:RegisterEvent('COVENANT_SANCTUM_RENOWN_LEVEL_CHANGED')

		self:RegisterEvent('TRAIT_CONFIG_UPDATED')
	end
	self:SetScript("OnEvent", function(self, event, ...)
		self[event](self, ...)
	end)

	self:InitInspect()
	self:InitCooldownSync()
	self.enabled = true
end

function CM:Disable()
	if not self.enabled then
		return
	end
	self:UnregisterAllEvents()

	self:DisableInspect()
	self:DesyncFromGroup()
	self.enabled = false
end

local function InspectQueueFrame_OnUpdate(_, elapsed)
	elapsedTime = elapsedTime + elapsed
	if elapsedTime > INSPECT_INTERVAL then
		CM:RequestInspect()
		elapsedTime = 0
	end
end

function CM:InitInspect()
	if self.initInspect then
		return
	end
	InspectQueueFrame:Hide()
	InspectQueueFrame:SetScript("OnUpdate", InspectQueueFrame_OnUpdate)
	self.initInspect = true
end

function CM:EnableInspect()
	if self.enabledInspect or next(queueEntries) == nil then
		return
	end
	self:RegisterEvent('INSPECT_READY')
	InspectQueueFrame:Show()
	self.enabledInspect = true
end

function CM:DisableInspect()
	if not self.enabledInspect then
		return
	end
	ClearInspectPlayer()
	self:UnregisterEvent('INSPECT_READY')
	InspectQueueFrame:Hide()

	wipe(P.pendingQueue)
	wipe(queueEntries)
	wipe(staleEntries)
	queriedGUID = nil
	isPaused = nil
	self.enabledInspect = false
end

function CM:DequeueInspect(guid, addToStale)
	if queriedGUID == guid then
		queriedGUID = nil
	end
	staleEntries[guid] = addToStale and queueEntries[guid] or nil
	queueEntries[guid] = nil
end

function CM:EnqueueInspect(force, guid)
	if E.isClassic then
		return
	end

	local addedTime = GetTime()
	if force then
		wipe(P.pendingQueue)
		wipe(queueEntries)
		wipe(staleEntries)
		for infoGUID in pairs(P.groupInfo) do
			if infoGUID == E.userGUID then
				self:InspectUser()
			else
				queueEntries[infoGUID] = addedTime
			end
		end
	elseif guid then
		if guid == E.userGUID then
			self:InspectUser()
		else
			queueEntries[guid] = addedTime
		end
	else
		local numPending = #P.pendingQueue
		if numPending == 0 then return end
		for i = numPending, 1, -1 do
			local pendingGUID = P.pendingQueue[i]
			queueEntries[pendingGUID] = addedTime
			P.pendingQueue[i] = nil
		end
	end

	if isPaused then
		nextInquiryTime = 0
		isPaused = nil
	end
	self:EnableInspect()
end

function CM:RequestInspect()
	local now = GetTime()
	if now < nextInquiryTime or UnitIsDead("player") or (InspectFrame and InspectFrame:IsShown()) then
		return
	end

	local stale = queriedGUID
	if stale then
		staleEntries[stale] = queueEntries[stale]
		queueEntries[stale] = nil
		queriedGUID = nil
	end

	if next(queueEntries) == nil then
		if next(staleEntries) then
			local copy = queueEntries
			queueEntries = staleEntries
			staleEntries = copy

			nextInquiryTime = now + INSPECT_PAUSE_TIME
			isPaused = true
		else
			self:DisableInspect()
		end
		return
	end
	isPaused = nil

	for unitGUID, addedTime in pairs(queueEntries) do
		local info = P.groupInfo[unitGUID]
		local isSyncedUnit = self.syncedGroupMembers[unitGUID]
		if info and not isSyncedUnit then
			local unit = info.unit
			local elapsed = now - addedTime
			if not UnitIsConnected(unit) or elapsed > INSPECT_TIMEOUT or info.isAdminObsForMDI then
				self:DequeueInspect(unitGUID)
			elseif E.preCata and
				not CheckInteractDistance(unit,1) or
				not CanInspect(unit) then
				staleEntries[unitGUID] = addedTime
				queueEntries[unitGUID] = nil
			else
				nextInquiryTime = now + INSPECT_DELAY
				queriedGUID = unitGUID
				NotifyInspect(unit)
				return
			end
		else
			self:DequeueInspect(unitGUID)
		end
	end
end

function CM:INSPECT_READY(guid)
	if queriedGUID == guid then
		self:InspectUnit(guid)
	end
end

local INVSLOT_INDEX = {
	INVSLOT_HEAD,
	INVSLOT_NECK,
	INVSLOT_SHOULDER,
	INVSLOT_CHEST,
	INVSLOT_WAIST,
	INVSLOT_LEGS,
	INVSLOT_FEET,
	INVSLOT_WRIST,
	INVSLOT_HAND,
	INVSLOT_FINGER1,
	INVSLOT_FINGER2,
	INVSLOT_BACK,
	INVSLOT_TRINKET1,
	INVSLOT_TRINKET2,
	INVSLOT_MAINHAND,

}
local NUM_INVSLOTS = #INVSLOT_INDEX

E.essenceData = {
	[2]  = { 293019, 298080, 298081, 298081, 294668, 298082, 298083, 298083 },
	[3]  = { 293031, 300009, 300010, 300010, 294910, 300012, 300013, 300013 },
	[4]  = { 295186, 298628, 299334, 299334, 295078, 298627, 299333, 299333 },
	[5]  = { 295258, 299336, 299338, 299338, 295246, 299335, 299337, 299337 },
	[6]  = { 295337, 299345, 299347, 299347, 295293, 299343, 299346, 299346 },
	[7]  = { 294926, 300002, 300003, 300003, 294964, 300004, 300005, 300005 },
	[12] = { 295373, 299349, 299353, 299353, 295365, 299348, 299350, 299350 },
	[13] = { 295746, 300015, 300016, 300016, 295750, 300018, 300020, 300020 },
	[14] = { 295840, 299355, 299358, 299358, 295834, 299354, 299357, 299357 },
	[15] = { 302731, 302982, 302983, 302983, 302916, 302984, 302985, 302985 },
	[16] = { 296036, 310425, 310442, 310442, 293030, 310422, 310426, 310426 },
	[17] = { 296072, 299875, 299876, 299876, 296050, 299878, 299879, 299879 },
	[18] = { 296094, 299882, 299883, 299883, 296081, 299885, 299887, 299887 },
	[19] = { 296197, 299932, 299933, 299933, 296136, 299935, 299936, 299936 },
	[20] = { 293032, 299943, 299944, 299944, 296207, 299939, 299940, 299940 },
	[21] = { 296230, 299958, 299959, 299959, 303448, 303474, 303476, 303476 },
	[22] = { 296325, 299368, 299370, 299370, 296320, 299367, 299369, 299369 },
	[23] = { 297108, 298273, 298277, 298277, 297147, 298274, 298275, 298275 },
	[24] = { 297375, 298309, 298312, 298312, 297411, 298302, 298304, 298304 },
	[25] = { 298168, 299273, 299275, 299275, 298193, 299274, 299277, 299277 },
	[27] = { 298357, 299372, 299374, 299374, 298268, 299371, 299373, 299373 },
	[28] = { 298452, 299376, 299378, 299378, 298407, 299375, 299377, 299377 },
	[32] = { 303823, 304088, 304121, 304121, 304081, 304089, 304123, 304123 },
	[33] = { 295046, 299984, 299988, 299988, 295164, 299989, 299991, 299991 },
	[34] = { 310592, 310601, 310602, 310602, 310603, 310607, 310608, 310608 },
	[35] = { 310690, 311194, 311195, 311195, 310712, 311197, 311198, 311198 },
	[36] = { 311203, 311302, 311303, 311303, 311210, 311304, 311306, 311306 },
	[37] = { 312725, 313921, 313922, 313922, 312771, 313919, 313920, 313920 },
}

CM.essencePowerIDs = {}

for essenceID, essencePowers in pairs(E.essenceData) do
	local link = E.postBFA and C_AzeriteEssence.GetEssenceHyperlink(essenceID, 1)
	if link and link ~= "" then
		link = link:match("%[(.-)%]"):gsub("%-","%%-")
		essencePowers.name = link
		essencePowers.ID = essenceID
		for i = 1, #essencePowers do
			local spellID = essencePowers[i]
			local rank1ID = essencePowers[i > 4 and 5 or 1]
			CM.essencePowerIDs[spellID] = rank1ID
		end
	end
end

function E:IsEssenceRankUpgraded(id)
	return id and id ~= CM.essencePowerIDs[id]
end

local function GetNumTooltipLines()
	if InspectTooltip then
		return InspectTooltip:NumLines()
	end
	return tooltipData and tooltipData.lines and #tooltipData.lines or 0
end

local function GetTooltipLineData(i)
	local lineData
	if tooltipData then
		lineData = tooltipData.lines[i]
		return lineData, lineData.leftText
	elseif InspectTooltip then
		lineData = _G["OmniCDInspectToolTipTextLeft" .. i]
		return lineData, lineData:GetText()
	end
end

local function GetTooltipLineTextColor(lineData)
	if not lineData then
		return 1, 1, 1
	elseif tooltipData then
		return lineData.leftColor.r, lineData.leftColor.g, lineData.leftColor.b
	elseif InspectTooltip then
		return lineData:GetTextColor()
	end
end

local ITEM_LEVEL = string.gsub(ITEM_LEVEL,"%%d","(%%d+)")

local function FindAzeriteEssencePower(info, specID, list)
	local heartOfAzerothLevel
	local majorID

	local numLines = math.min(16, GetNumTooltipLines())
	for j = 2, numLines do
		local lineData, text = GetTooltipLineData(j)
		if text and text ~= "" then
			if not heartOfAzerothLevel then
				heartOfAzerothLevel = strmatch(text, ITEM_LEVEL)
				if heartOfAzerothLevel then
					heartOfAzerothLevel = tonumber(heartOfAzerothLevel)
				end
			elseif j > 10 then
				for essenceID, essencePowers in pairs(E.essenceData) do
					if strfind(text, essencePowers.name .. "$") == 1 then
						local r, _, b = GetTooltipLineTextColor(lineData)
						local rank = 3
						if r < .01 then
							rank = 2
						elseif r > .90 then
							rank = 4
						elseif b < .01 then
							rank = 1
						end

						if not majorID and GetTooltipLineData(j - 1) == " " then
							majorID = essencePowers[rank]
							local rank1 = essencePowers[1]
							info.talentData[rank1] = "AE"
							info.talentData["essMajorRank1"] = rank1
							info.talentData["essMajorID"] = majorID
							if list then
								list[#list + 1] = majorID .. ":AE"
							end

							if E.essMajorConflict[majorID] then
								local pvpTalent = E.pvpTalentsByEssMajorConflict[specID]
								if pvpTalent then
									info.talentData[pvpTalent] = "AE"
									if list then
										list[#list + 1] = pvpTalent
									end
								end
							end
							if rank1 ~= 296325 then
								break
							end
						end

						local minorID = essencePowers[rank + 4]
						if E.essMinorStrive[minorID] then

							local mult = (90.1 - ((heartOfAzerothLevel - 117) * 0.15)) / 100
							if P.isInPvPInstance then
								mult = 0.2 + mult * 0.8
							end
							mult = math.max(0.75, math.min(0.9, mult))
							info.talentData["essStriveMult"] = mult
							if list then
								list[#list + 1] = mult .. ":ae"
							end
							return
						end
						break
					end
				end
			end
		end
	end
end

local function FindAzeritePower(info, list)
	local numLines = GetNumTooltipLines()
	for j = 10, numLines do
		local _, text = GetTooltipLineData(j)
		if text and text ~= "" and strfind(text, "^-") == 1 then
			for _, v in pairs(E.spell_cxmod_azerite) do
				if strfind(text, v.name .. "$") == 3 then
					info.talentData[v.azerite] = "A"
					if list then list[#list + 1] = v.azerite .. ":A" end
					return
				end
			end
		end
	end
end

local S_ITEM_SET_NAME = "^" .. ITEM_SET_NAME:gsub("([%(%)])", "%%%1"):gsub("%%%d?$?d", "(%%d+)"):gsub("%%%d?$?s", "(.+)") .. "$"

local function FindSetBonus(info, specBonus, list)
	local bonusID, numRequired = specBonus[1], specBonus[2]
	local numLines = GetNumTooltipLines()
	for j = 10, numLines do
		local _, text = GetTooltipLineData(j)
		if text and text ~= "" then
			local name, numEquipped, numFullSet = strmatch(text, S_ITEM_SET_NAME)
			if name and numEquipped and numFullSet then
				numEquipped = tonumber(numEquipped)
				if numEquipped and numEquipped >= numRequired then
					info.talentData[bonusID] = "S"
					if list then list[#list + 1] = bonusID .. ":S" end
				end
				return bonusID
			end
		end
	end
end

local function FindCraftedRuneforgeLegendary(info, itemLink, list)
	local _,_,_,_,_,_,_,_,_,_,_,_,_, numBonusIDs, bonusIDs = strsplit(":", itemLink, 15)
	numBonusIDs = tonumber(numBonusIDs)
	if numBonusIDs and bonusIDs then
		local t = { strsplit(":", bonusIDs, numBonusIDs + 1) }
		for j = 1, numBonusIDs do
			local bonusID = t[j]
			bonusID = tonumber(bonusID)
			local runeforgeDescID = E.runeforge_bonus_to_descid[bonusID]
			if runeforgeDescID then
				if type(runeforgeDescID) == "table" then
					for _, descID in pairs(runeforgeDescID) do
						info.talentData[descID] = "R"
						if list then list[#list + 1] = descID .. ":R" end
					end
				else
					info.talentData[runeforgeDescID] = "R"
					if list then list[#list + 1] = runeforgeDescID .. ":R" end
				end
				return
			end
		end
	end
end

local runeforgeBaseItems = {
	[1]  = { 173245, 172317, 172325, 171415 },
	[2]  = { 178927, 178927, 178927, 178927 },
	[3]  = { 173247, 172319, 172327, 171417 },
	[5]  = { 173241, 172314, 172322, 171412 },
	[6]  = { 173248, 172320, 172328, 171418 },
	[7]  = { 173246, 172318, 172326, 171416 },
	[8]  = { 173243, 172315, 172323, 171413 },
	[9]  = { 173249, 172321, 172329, 171419 },
	[10] = { 173244, 172316, 172324, 171414 },
	[11] = { 178926, 178926, 178926, 178926 },
	[12] = { 178926, 178926, 178926, 178926 },
	[15] = { 173242, 173242, 173242, 173242 },
}

--[[
if we're separating player insepct:
	local itemID = GetInventoryItemID(unit, slotID)
	local itemLink = GetInventoryItemLink(unit, slotID)
	local itemLocation = ItemLocation:CreateFromEquipmentSlot(slotID)
	local isRuenforgeBaseItem = C_LegendaryCrafting.IsValidRuneforgeBaseItem(itemLocation)
	local isRuneforgeLegendary = C_LegendaryCrafting.IsRuneforgeLegendary(itemLocation)
]]
local function GetEquippedItemData(info, unit, specID, list)
	local moveToStale
	local numRuneforge = 0
	local numTierSetBonus = 0
	local foundTierSpecBonus
	if list then list[#list + 1] = "^M" end

	for i = 1, NUM_INVSLOTS do
		local slotID = INVSLOT_INDEX[i]
		local itemLink = GetInventoryItemLink(unit, slotID)
		if itemLink then
			local itemID, _,_,_,_,_, subclassID = GetItemInfoInstant(itemLink)
			if itemID then
				if i <= 12 then
					local tierSetBonus = E.item_set_bonus[itemID]
					local equipBonusID = E.item_equip_bonus[itemID]
					subclassID = subclassID == 0 and 1 or subclassID
					local unityRuneforgeLegendary = E.item_unity[itemID]
					local isCraftedRuneforgeLegendary = numRuneforge <= 2
						and runeforgeBaseItems[slotID]
						and itemID == runeforgeBaseItems[slotID][subclassID]
					if InspectTooltip then
						InspectTooltip:SetInventoryItem(unit, slotID)
					else --[[https://wowpedia.fandom.com/wiki/Patch_10.0.2/API_changes#Tooltip_Changes]]
						tooltipData = C_TooltipInfo.GetInventoryItem(unit, slotID)
						if tooltipData then
							TooltipUtil.SurfaceArgs(tooltipData)
							for _, line in ipairs(tooltipData.lines) do
							    TooltipUtil.SurfaceArgs(line)
							end
						end
					end
					if equipBonusID then
						info.talentData[equipBonusID] = true
						if list then list[#list + 1] = equipBonusID .. ":S" end
					end
					if tierSetBonus then
						local specBonus = E.preCata and tierSetBonus or tierSetBonus[specID]
						if specBonus and numTierSetBonus < 2 and specBonus[1] ~= foundTierSpecBonus then
							foundTierSpecBonus = FindSetBonus(info, specBonus, list)
							if foundTierSpecBonus then
								numTierSetBonus = numTierSetBonus + 1
							end
						end

					elseif isCraftedRuneforgeLegendary then
						FindCraftedRuneforgeLegendary(info, itemLink, list)
						numRuneforge = numRuneforge + 1
					elseif unityRuneforgeLegendary then
						if type(unityRuneforgeLegendary) == "table" then
							for _, runeforgeDescID in pairs(unityRuneforgeLegendary) do
								info.talentData[runeforgeDescID] = "R"
								if list then list[#list + 1] = runeforgeDescID .. ":R" end
							end
						else
							info.talentData[unityRuneforgeLegendary] = "R"
							if list then list[#list + 1] = unityRuneforgeLegendary .. ":R" end
						end
						numRuneforge = numRuneforge + 1
					elseif itemID == 158075 then
						FindAzeriteEssencePower(info, specID, list)
					elseif C_AzeriteEmpoweredItem.IsAzeriteEmpoweredItemByID(itemLink) then
						FindAzeritePower(info, list)
					end
					if InspectTooltip then
						InspectTooltip:ClearLines()
					end
				else
					itemID = E.item_merged[itemID] or itemID
					info.itemData[itemID] = true
					if list then list[#list + 1] = itemID end
				end
			elseif not moveToStale then
				moveToStale = true
			end
		end
		if list and i == 12 then list[#list + 1] = "^E" end
	end

	return moveToStale
end


local treeNodeSpellIDs = {
	[850] = { [386628]=180,[871]=3,[316440]=76,[382549]=86,[383442]=120,[386630]=181,[12294]=13,[383762]=126,[394855]=223,[248621]=59,[383317]=116,[390713]=201,[46968]=23,[390140]=194,[386634]=182,[215568]=53,[281001]=72,[384404]=152,[203201]=50,[384277]=146,[383959]=134,[382940]=95,[184364]=37,[388933]=187,[388807]=185,[384090]=141,[845]=2,[215571]=54,[275334]=64,[260643]=60,[386196]=171,[382946]=96,[184367]=38,[386071]=168,[382310]=84,[190456]=41,[383459]=121,[386328]=176,[184783]=39,[397103]=227,[386011]=164,[12950]=15,[386394]=178,[384036]=135,[384100]=142,[202316]=45,[202603]=47,[385059]=155,[203177]=49,[64382]=24,[400803]=230,[383082]=102,[400314]=229,[97462]=27,[29725]=21,[383338]=117,[385952]=163,[382956]=101,[262150]=61,[400205]=228,[386208]=174,[316402]=74,[202095]=42,[386357]=177,[118038]=32,[383468]=122,[382767]=89,[383341]=118,[5246]=8,[23920]=19,[382258]=82,[383852]=128,[382896]=91,[316405]=75,[390674]=199,[396719]=225,[382900]=92,[394312]=221,[382260]=83,[383854]=129,[385703]=158,[385512]=156,[393967]=217,[384110]=143,[208154]=52,[394307]=219,[394062]=218,[394311]=220,[383155]=109,[383219]=110,[393965]=216,[152278]=35,[227847]=55,[392966]=214,[382953]=99,[315720]=73,[280392]=69,[390354]=195,[3411]=7,[392790]=210,[392777]=209,[386027]=165,[262161]=62,[383605]=124,[388004]=183,[385008]=154,[383287]=111,[12323]=14,[392536]=208,[391997]=207,[316733]=77,[107570]=29,[391683]=206,[386030]=166,[391572]=205,[275336]=65,[386477]=179,[382461]=85,[385840]=160,[6572]=11,[280001]=68,[390725]=202,[390675]=200,[23881]=18,[29838]=22,[389603]=190,[383292]=112,[262231]=63,[382895]=90,[334779]=78,[383293]=113,[392792]=211,[167105]=36,[390138]=193,[390135]=192,[383103]=104,[202168]=44,[280721]=70,[383295]=114,[384124]=145,[390563]=197,[346002]=80,[389308]=189,[389306]=188,[388903]=186,[6343]=9,[202743]=48,[388049]=184,[103827]=28,[396749]=226,[384063]=138,[386285]=175,[386164]=170,[386034]=167,[385888]=162,[385843]=161,[385704]=159,[385571]=157,[401150]=231,[394329]=222,[384361]=149,[384318]=147,[206315]=51,[391270]=203,[85288]=26,[390123]=191,[384067]=139,[391271]=204,[383430]=119,[376079]=81,[6544]=10,[383877]=130,[384042]=137,[393950]=215,[236279]=58,[107574]=31,[382939]=93,[392931]=212,[12975]=16,[275339]=67,[18499]=17,[382948]=97,[383922]=133,[383115]=107,[383703]=125,[772]=1,[384072]=140,[383916]=132,[382954]=100,[202163]=43,[202560]=46,[81099]=25,[1719]=6,[7384]=12,[383848]=127,[1160]=4,[383486]=123,[392936]=213,[383297]=115,[1161]=5,[382764]=88,[390642]=198,[383154]=108,[383885]=131,[384969]=153,[384041]=136,[335077]=79,[228920]=57,[275338]=66, },
	[852] = { [193539]=41,[394023]=169,[79096]=26,[245687]=57,[131511]=34,[400783]=176,[382742]=153,[319949]=75,[386823]=165,[121411]=32,[319951]=76,[382746]=154,[31230]=15,[381982]=126,[385616]=162,[196922]=46,[381664]=108,[382238]=133,[108216]=31,[343160]=79,[5938]=6,[193640]=43,[195457]=44,[196924]=47,[14161]=11,[319066]=73,[57934]=22,[255989]=59,[193546]=42,[381797]=111,[36554]=19,[2094]=2,[381798]=112,[61329]=24,[255544]=58,[378803]=85,[354897]=81,[381800]=114,[381673]=110,[378996]=88,[392384]=166,[277953]=67,[381802]=116,[382504]=136,[378807]=86,[272026]=65,[382505]=137,[382506]=138,[360194]=82,[378427]=83,[35551]=16,[91023]=28,[382508]=140,[382509]=141,[79134]=27,[378813]=87,[6770]=7,[379005]=89,[381619]=92,[382512]=143,[381620]=93,[382513]=144,[256188]=62,[381621]=94,[5761]=5,[382514]=145,[200758]=52,[382515]=146,[79008]=25,[381623]=96,[378436]=84,[381624]=97,[382517]=147,[382518]=148,[381626]=98,[381627]=99,[5277]=4,[58423]=23,[152152]=36,[381629]=100,[381630]=101,[1776]=1,[31224]=14,[381822]=117,[381631]=102,[382524]=150,[196938]=49,[280716]=69,[382015]=131,[13877]=9,[51690]=21,[394320]=171,[381634]=104,[319032]=72,[384631]=156,[328085]=77,[280719]=70,[382528]=152,[200733]=51,[108209]=30,[381637]=105,[400804]=177,[395422]=175,[394983]=174,[279876]=68,[394321]=172,[256165]=60,[394309]=170,[381894]=125,[193531]=39,[393972]=168,[393970]=167,[381640]=106,[51667]=20,[383281]=155,[385627]=163,[257505]=63,[381799]=113,[385424]=160,[381885]=124,[385722]=164,[382525]=151,[382523]=149,[231719]=55,[382511]=142,[382507]=139,[14983]=13,[382503]=135,[382245]=134,[196976]=50,[382017]=132,[121471]=33,[381632]=103,[381878]=123,[196937]=48,[394332]=173,[381988]=128,[277925]=66,[381985]=127,[385408]=159,[343142]=78,[381622]=95,[381542]=90,[381839]=119,[381543]=91,[381877]=122,[256170]=61,[13750]=8,[196861]=45,[381989]=129,[381828]=118,[381990]=130,[319175]=74,[235484]=56,[231691]=54,[185313]=37,[14062]=10,[193537]=40,[14190]=12,[381801]=115,[381652]=107,[2823]=3,[315508]=71,[185314]=38,[385478]=161,[381669]=109,[137619]=35,[381845]=120,[108208]=29,[200806]=53,[271877]=64,[381846]=121,[344363]=80, },
	[854] = { [391409]=133,[389688]=89,[320331]=49,[389819]=110,[203550]=9,[207407]=21,[389693]=90,[389694]=91,[389695]=92,[320654]=62,[390142]=120,[389696]=93,[258887]=42,[389824]=111,[389697]=94,[278326]=47,[207697]=25,[389763]=105,[388106]=76,[207347]=19,[207666]=23,[388107]=77,[320341]=50,[227174]=35,[388108]=78,[203555]=10,[388109]=79,[389958]=114,[388110]=80,[388111]=81,[389705]=95,[388112]=82,[258860]=39,[388113]=83,[370965]=75,[390154]=122,[389708]=96,[320412]=55,[258925]=43,[320413]=56,[388116]=85,[326853]=65,[198013]=5,[389711]=97,[320415]=57,[390158]=123,[320416]=58,[213410]=32,[393029]=136,[320418]=59,[389715]=98,[211881]=29,[207387]=20,[247454]=38,[205411]=14,[389781]=106,[389718]=99,[389846]=112,[207739]=26,[389783]=107,[207548]=22,[389720]=100,[389976]=115,[389849]=113,[389977]=116,[391189]=130,[389978]=117,[389724]=102,[390808]=127,[218612]=34,[347461]=74,[232893]=36,[389729]=103,[179057]=1,[389732]=104,[204909]=13,[328725]=66,[320374]=52,[196718]=4,[202137]=7,[389799]=108,[235893]=37,[207684]=24,[320313]=48,[202138]=8,[258876]=40,[395446]=139,[212084]=30,[393827]=138,[263642]=44,[393822]=137,[320635]=61,[391429]=135,[391397]=132,[198793]=6,[391275]=131,[196555]=3,[320387]=54,[204021]=11,[389997]=119,[213010]=31,[343311]=73,[336639]=67,[209281]=28,[209258]=27,[343206]=71,[391178]=129,[390163]=125,[204596]=12,[343207]=72,[388114]=84,[206477]=17,[320421]=60,[263648]=45,[343017]=70,[320386]=53,[268175]=46,[389721]=101,[390213]=126,[206478]=18,[389811]=109,[320770]=63,[206416]=15,[258881]=41,[320361]=51,[389220]=87,[391165]=128,[388118]=86,[217832]=33,[389985]=118,[390152]=121,[183782]=2,[206476]=16,[321028]=64,[389687]=88,[343014]=69,[342817]=68, },
	[781] = { [383695]=92,[388604]=137,[322113]=72,[388477]=127,[388031]=120,[124502]=40,[383697]=93,[386949]=105,[383698]=94,[391412]=170,[393516]=188,[325177]=83,[383700]=95,[322118]=73,[388674]=142,[394093]=189,[196730]=51,[322120]=74,[388548]=133,[198898]=59,[231602]=64,[122783]=36,[388551]=134,[388615]=138,[322507]=75,[388681]=143,[388809]=149,[116680]=22,[388491]=128,[322510]=76,[388874]=160,[152173]=44,[195300]=48,[196607]=49,[115310]=14,[137639]=43,[388813]=152,[197915]=58,[386965]=106,[383714]=97,[343743]=90,[152175]=45,[119582]=29,[115008]=5,[116841]=24,[196737]=53,[220357]=63,[394110]=190,[388564]=135,[325197]=84,[387991]=117,[387035]=107,[274963]=68,[383785]=98,[196740]=54,[325201]=85,[387230]=111,[115313]=15,[101545]=1,[122278]=32,[197908]=57,[400629]=200,[113656]=4,[280515]=70,[400089]=199,[123904]=37,[132578]=42,[400053]=198,[388811]=150,[388509]=130,[116844]=25,[122470]=35,[388701]=146,[399226]=196,[397768]=195,[397251]=194,[392991]=181,[388511]=131,[121817]=31,[115203]=13,[388193]=124,[393357]=185,[387046]=108,[394923]=192,[394123]=191,[157411]=46,[115315]=16,[393460]=187,[210802]=60,[323999]=79,[391383]=169,[393400]=186,[124081]=39,[191837]=47,[393098]=184,[116705]=23,[392993]=182,[396166]=193,[388686]=145,[392979]=175,[388856]=159,[388517]=132,[123986]=38,[387625]=114,[389577]=163,[392983]=177,[392910]=172,[197895]=55,[392970]=174,[115173]=9,[392958]=173,[392982]=176,[392900]=171,[391370]=168,[383994]=99,[325153]=82,[115181]=12,[274909]=67,[116847]=27,[107428]=3,[389579]=165,[389578]=164,[281231]=71,[392985]=178,[387184]=109,[389575]=162,[389574]=161,[392986]=179,[386276]=101,[388779]=148,[325093]=81,[388849]=157,[388848]=156,[391330]=167,[196736]=52,[388814]=153,[388812]=151,[399491]=197,[388740]=147,[392989]=180,[388682]=144,[115175]=10,[388846]=154,[280197]=69,[337209]=88,[388593]=136,[388847]=155,[197900]=56,[264348]=65,[344359]=91,[116849]=28,[121253]=30,[322960]=78,[387765]=116,[328669]=86,[115399]=18,[388212]=125,[387256]=112,[328670]=87,[392994]=183,[386937]=102,[115078]=6,[322740]=77,[388505]=129,[405044]=202,[388023]=119,[115396]=17,[388661]=140,[218164]=62,[116095]=19,[404408]=201,[388020]=118,[386941]=104,[343655]=89,[388854]=158,[115151]=8,[388047]=122,[383707]=96,[388038]=121,[388664]=141,[388218]=126,[115176]=11,[196725]=50,[387638]=115,[115098]=7,[124682]=41,[101643]=2,[387276]=113,[116645]=21,[387219]=110,[122281]=34,[389942]=166,[324312]=80,[274586]=66, },
	[658] = { [190447]=46,[382293]=118,[382103]=111,[235870]=69,[383634]=137,[235711]=68,[389627]=168,[269650]=77,[382424]=120,[66]=1,[12051]=10,[378919]=104,[45438]=21,[382490]=123,[30449]=13,[384276]=153,[108853]=28,[386763]=164,[112965]=30,[321420]=82,[321739]=85,[190356]=45,[391102]=171,[205020]=49,[270233]=78,[31589]=15,[11366]=8,[383391]=132,[321745]=86,[108839]=27,[116011]=33,[343230]=94,[110959]=29,[383967]=147,[382820]=127,[205023]=52,[384861]=161,[31661]=16,[384033]=149,[382440]=121,[205024]=53,[390218]=170,[382569]=125,[321752]=87,[205025]=54,[342344]=91,[383782]=143,[382826]=128,[205026]=55,[384612]=157,[12982]=12,[389713]=169,[205027]=56,[378749]=101,[157980]=41,[475]=2,[383659]=138,[205028]=57,[203275]=48,[236457]=70,[380154]=108,[157981]=42,[383661]=139,[383980]=148,[205029]=58,[384683]=159,[321507]=83,[205030]=59,[384174]=151,[84714]=25,[378947]=105,[378756]=102,[383665]=140,[387044]=166,[383092]=129,[381244]=109,[235313]=66,[383476]=133,[383604]=136,[155148]=38,[342231]=88,[383860]=145,[383669]=141,[235219]=64,[382268]=114,[321387]=81,[382270]=115,[384374]=154,[281482]=80,[382144]=113,[44614]=20,[387807]=167,[378448]=100,[386828]=165,[1463]=4,[386539]=163,[385167]=162,[384858]=160,[384187]=152,[384651]=158,[205037]=61,[86949]=26,[205036]=60,[384060]=150,[383886]=146,[383810]=144,[383676]=142,[113724]=31,[205022]=51,[383489]=134,[383243]=131,[235224]=65,[378198]=97,[153595]=36,[79684]=24,[257537]=73,[55342]=22,[153561]=35,[382800]=126,[378901]=103,[342245]=89,[212653]=62,[5143]=7,[236628]=71,[31687]=17,[157642]=40,[56377]=23,[153626]=37,[378433]=99,[321526]=84,[382493]=124,[378406]=98,[382297]=119,[759]=3,[117216]=34,[190319]=44,[342249]=90,[264354]=75,[384452]=155,[382289]=116,[236662]=72,[278309]=79,[382110]=112,[365350]=95,[384581]=156,[205021]=50,[257541]=74,[376103]=96,[2120]=5,[44457]=19,[381706]=110,[383499]=135,[379993]=107,[379049]=106,[2948]=6,[30455]=14,[231564]=63,[12472]=11,[11426]=9,[382481]=122,[157997]=43,[269644]=76,[44425]=18,[343222]=93,[343183]=92,[155149]=39,[114923]=32,[199786]=47,[382292]=117,[383121]=130,[235450]=67, },
	[774] = { [199532]=42,[259489]=58,[385737]=148,[268501]=77,[187707]=29,[131894]=19,[56315]=13,[321287]=89,[385739]=149,[187708]=30,[155228]=22,[53351]=12,[321290]=90,[392053]=168,[120360]=17,[194595]=38,[388039]=153,[120679]=18,[265895]=74,[400472]=174,[320976]=86,[384790]=142,[388042]=154,[260228]=60,[259495]=59,[392060]=170,[213691]=49,[388045]=155,[360952]=101,[266921]=75,[378739]=115,[378740]=116,[217200]=50,[147362]=21,[257044]=53,[378743]=117,[378745]=118,[391559]=167,[378937]=133,[193455]=34,[385695]=145,[260393]=69,[257620]=54,[191384]=33,[388056]=156,[378940]=134,[257621]=55,[269737]=78,[378750]=119,[260331]=67,[343242]=96,[19577]=6,[271014]=81,[236776]=52,[360966]=102,[378880]=125,[343244]=97,[199483]=39,[1513]=1,[378244]=113,[389019]=158,[288613]=84,[273887]=83,[390231]=166,[343248]=99,[2643]=2,[186289]=26,[19434]=4,[201430]=44,[260367]=68,[260240]=61,[34477]=10,[271788]=82,[378442]=114,[260241]=62,[186387]=27,[375891]=103,[264332]=72,[269751]=79,[378955]=139,[393933]=172,[393344]=171,[389882]=165,[270581]=80,[19801]=7,[389880]=164,[378950]=136,[260243]=63,[378766]=121,[389865]=162,[389660]=161,[19574]=5,[378002]=104,[389654]=160,[190852]=31,[389449]=159,[388057]=157,[378769]=123,[193530]=35,[378948]=135,[260404]=70,[115939]=16,[385810]=150,[378961]=140,[385718]=147,[260309]=66,[385709]=146,[187698]=28,[378771]=124,[321460]=92,[321014]=87,[264735]=73,[378007]=106,[384799]=143,[193532]=36,[378962]=141,[378953]=138,[378951]=137,[389866]=163,[386870]=151,[378934]=132,[378916]=131,[193533]=37,[343247]=98,[259387]=57,[321530]=94,[321018]=88,[109215]=14,[203415]=45,[257944]=56,[199921]=43,[212436]=48,[162488]=23,[378907]=128,[378905]=127,[185789]=24,[34026]=9,[212431]=47,[378910]=129,[378205]=109,[378014]=108,[321468]=93,[199528]=40,[186270]=25,[378888]=126,[109248]=15,[260248]=64,[378207]=110,[400456]=173,[267116]=76,[385539]=144,[386878]=152,[190925]=32,[378767]=122,[5116]=3,[378209]=111,[378765]=120,[231548]=51,[199530]=41,[378210]=112,[378004]=105,[263186]=71,[342049]=95,[294029]=85,[321293]=91,[204089]=46,[378913]=130,[359844]=100,[260285]=65,[378010]=107, },
	[701] = { [376237]=110,[369990]=34,[370819]=43,[376239]=111,[370821]=44,[376240]=112,[359793]=7,[370886]=49,[368847]=23,[375796]=98,[371270]=59,[376179]=105,[370888]=50,[375797]=99,[371016]=54,[375544]=83,[370062]=35,[375801]=100,[381922]=122,[387341]=130,[372233]=64,[369939]=33,[376888]=114,[370960]=52,[370897]=51,[370962]=53,[375554]=84,[375618]=89,[370837]=45,[370455]=37,[373834]=68,[377086]=117,[370839]=46,[374346]=72,[371032]=55,[369375]=26,[374348]=73,[385696]=123,[371034]=56,[375561]=86,[386272]=124,[359816]=8,[370845]=47,[351338]=1,[365937]=17,[376138]=101,[373270]=67,[375757]=94,[376204]=106,[371806]=61,[386405]=129,[386342]=127,[377099]=118,[376207]=107,[371426]=60,[377100]=119,[375443]=77,[357211]=4,[368432]=21,[376210]=108,[386283]=125,[370537]=38,[370665]=40,[375574]=87,[386348]=128,[376150]=102,[375577]=88,[367226]=19,[369459]=27,[375517]=79,[369908]=30,[378196]=120,[363534]=12,[369846]=28,[375520]=80,[359073]=6,[370867]=48,[387761]=131,[375777]=95,[387787]=132,[369913]=32,[372527]=66,[363916]=13,[375725]=93,[360995]=10,[374227]=70,[372048]=63,[381921]=121,[374968]=74,[386336]=126,[370553]=39,[375510]=78,[374251]=71,[366155]=18,[376164]=103,[375542]=82,[362874]=11,[370781]=41,[376930]=115,[369089]=24,[375783]=97,[371257]=58,[376166]=104,[373861]=69,[372469]=65,[370783]=42,[371832]=62,[375721]=90,[357170]=3,[371038]=57,[376872]=113,[375722]=92,[364343]=14,[369297]=25,[365933]=16,[368838]=22,[365585]=15,[360806]=9,[368412]=20,[355936]=2,[375556]=85,[375087]=75,[375406]=76,[358385]=5,[377082]=116,[375528]=81,[369909]=31,[376236]=109,[370452]=36, },
	[793] = { [203962]=101,[390772]=167,[158477]=68,[113043]=54,[391347]=174,[382550]=152,[158478]=69,[33891]=25,[371905]=136,[203964]=102,[155578]=63,[370695]=135,[132469]=59,[131768]=57,[203965]=103,[29166]=21,[202021]=89,[383192]=156,[155675]=65,[394094]=232,[400278]=242,[155835]=66,[102558]=45,[16974]=16,[102351]=41,[383195]=157,[378988]=151,[391037]=170,[202342]=92,[382559]=154,[391548]=179,[377842]=148,[197625]=80,[79577]=36,[102543]=44,[197721]=85,[384665]=160,[392124]=197,[197626]=81,[231063]=114,[203651]=99,[202918]=98,[392116]=196,[231032]=111,[231064]=115,[192081]=72,[102560]=46,[202345]=93,[377210]=143,[403949]=248,[345208]=133,[197628]=84,[102401]=43,[391045]=171,[319454]=127,[403521]=247,[400636]=246,[400533]=245,[106832]=48,[391174]=173,[400531]=244,[202028]=90,[400320]=243,[202347]=94,[5217]=12,[372943]=141,[382552]=153,[99]=1,[16931]=15,[400222]=240,[108299]=53,[400158]=239,[370586]=134,[372945]=142,[203974]=104,[400142]=238,[328767]=131,[207385]=109,[197524]=77,[238049]=117,[200851]=87,[400129]=236,[391881]=185,[145108]=61,[191034]=71,[202031]=91,[274837]=120,[394121]=234,[394115]=233,[2782]=9,[202430]=96,[274902]=121,[393414]=214,[279620]=122,[106898]=50,[394048]=228,[194223]=74,[377796]=144,[394046]=227,[393991]=226,[393960]=225,[393958]=224,[159286]=70,[50334]=30,[200854]=88,[197061]=75,[327541]=128,[231040]=112,[393940]=221,[393868]=220,[205636]=107,[135288]=60,[393771]=219,[371999]=137,[108238]=52,[78674]=34,[393618]=217,[377801]=145,[393611]=216,[391528]=178,[394058]=229,[48438]=26,[393371]=213,[88747]=38,[6807]=13,[210706]=110,[285381]=123,[391951]=190,[102342]=40,[392378]=210,[392356]=209,[78675]=35,[202770]=97,[392325]=208,[392315]=207,[392302]=206,[383352]=159,[2908]=10,[194153]=73,[22570]=18,[124974]=56,[384667]=161,[145205]=62,[93402]=39,[392256]=203,[102359]=42,[393427]=215,[391875]=184,[394065]=230,[378986]=150,[392160]=198,[1079]=4,[404521]=249,[377835]=147,[400059]=235,[372618]=140,[384668]=162,[274281]=119,[392410]=211,[391709]=181,[391947]=188,[203953]=100,[391888]=187,[392220]=201,[391872]=183,[204066]=106,[391700]=180,[392221]=202,[328025]=130,[400254]=241,[106839]=49,[390902]=169,[390864]=168,[377811]=146,[386318]=165,[383197]=158,[384721]=163,[106951]=51,[114107]=55,[391969]=192,[392288]=204,[33873]=24,[385786]=164,[50464]=31,[383191]=155,[391078]=172,[392162]=199,[231050]=113,[377847]=149,[392099]=195,[390378]=166,[391972]=193,[372567]=139,[372119]=138,[5211]=11,[252216]=118,[204053]=105,[288826]=124,[236068]=116,[48484]=27,[301768]=125,[24858]=20,[33786]=23,[393760]=218,[102793]=47,[207383]=108,[392167]=200,[22842]=19,[391785]=182,[740]=2,[18562]=17,[343647]=132,[394081]=231,[327993]=129,[393954]=222,[391978]=194,[80313]=37,[200390]=86,[319439]=126,[392999]=212,[61336]=33,[1822]=5,[393956]=223,[400140]=237,[16864]=14,[132158]=58,[774]=3,[2637]=6,[197073]=76,[202425]=95,[158476]=67,[33763]=22,[392301]=205,[155580]=64, },
	[720] = { [196408]=34,[324536]=69,[387075]=107,[387522]=146,[265187]=54,[387396]=135,[386185]=82,[386759]=96,[386951]=101,[387972]=154,[387016]=105,[270545]=64,[386124]=80,[199471]=38,[17962]=9,[387400]=137,[288843]=66,[231793]=46,[196412]=35,[264874]=53,[387338]=130,[266086]=55,[267170]=57,[108503]=21,[267171]=58,[405955]=175,[111898]=25,[386194]=83,[205148]=40,[205180]=42,[387279]=127,[386833]=97,[196447]=36,[387153]=115,[63106]=15,[387600]=152,[387602]=153,[386646]=90,[386200]=84,[264119]=50,[387093]=111,[48181]=13,[219272]=45,[387349]=131,[386648]=91,[264057]=48,[387541]=148,[387095]=112,[205184]=43,[1122]=3,[389775]=166,[5484]=4,[5740]=5,[116858]=26,[196102]=29,[387483]=141,[387165]=118,[196103]=30,[104316]=17,[387485]=142,[387549]=149,[387103]=113,[27243]=10,[386976]=102,[264130]=51,[334319]=72,[171975]=28,[386659]=92,[6789]=7,[278350]=65,[387108]=114,[386344]=86,[387173]=120,[387301]=128,[386664]=93,[388832]=157,[387494]=143,[387176]=121,[603]=1,[108558]=22,[386858]=98,[386922]=100,[386986]=103,[108415]=18,[334585]=73,[264078]=49,[405936]=174,[316099]=67,[389761]=164,[389764]=165,[405330]=171,[405327]=170,[399668]=169,[390173]=168,[387384]=133,[108416]=19,[405670]=172,[386864]=99,[405798]=173,[389630]=163,[389609]=162,[389590]=161,[333889]=71,[389576]=160,[56244]=14,[389359]=158,[388827]=156,[387976]=155,[6353]=6,[32388]=12,[387526]=147,[387250]=122,[387569]=150,[386613]=87,[389992]=167,[17877]=8,[387506]=144,[387475]=140,[268358]=63,[386997]=104,[267211]=59,[386105]=77,[385899]=76,[215941]=44,[387432]=138,[387399]=136,[387445]=139,[387509]=145,[387355]=132,[386617]=88,[710]=2,[386110]=78,[267214]=60,[264000]=47,[80240]=16,[152108]=27,[387065]=106,[384069]=74,[387159]=117,[196226]=31,[267216]=61,[386620]=89,[386174]=81,[387275]=126,[267217]=62,[205145]=39,[196277]=32,[266134]=56,[387578]=151,[387273]=125,[386686]=94,[387166]=119,[387252]=123,[386113]=79,[111400]=23,[328774]=70,[198590]=37,[387322]=129,[196406]=33,[387259]=124,[387156]=116,[205179]=41,[386689]=95,[317138]=68,[389367]=159,[387391]=134,[30283]=11,[385881]=75,[386256]=85,[111771]=24,[264178]=52,[387084]=110, },
	[750] = { [195292]=46,[376938]=121,[194878]=41,[81136]=29,[377640]=143,[277234]=85,[276023]=82,[49143]=14,[377514]=134,[253593]=76,[111673]=32,[207311]=68,[391477]=165,[51271]=22,[194912]=42,[108199]=31,[207057]=56,[390268]=156,[194913]=43,[206930]=50,[377073]=124,[51128]=21,[374715]=115,[195679]=47,[206931]=51,[391546]=167,[221562]=74,[219809]=72,[374717]=116,[377076]=125,[49184]=15,[377587]=138,[194916]=44,[390275]=158,[207061]=57,[376251]=119,[194662]=38,[50842]=19,[205723]=48,[207317]=69,[343294]=100,[207126]=59,[55233]=24,[206967]=53,[390279]=159,[377083]=126,[374598]=114,[48707]=9,[55090]=23,[49998]=18,[221536]=73,[281208]=87,[47528]=5,[206970]=54,[205727]=49,[207289]=67,[47568]=7,[374030]=105,[377537]=135,[57330]=25,[377092]=127,[206940]=52,[219786]=71,[273946]=77,[221699]=75,[377668]=145,[279302]=86,[391566]=168,[374737]=117,[316916]=93,[212552]=70,[206974]=55,[390166]=151,[377098]=128,[207230]=63,[273952]=78,[391571]=169,[195182]=45,[273953]=79,[152279]=35,[77575]=28,[207200]=62,[207264]=64,[49530]=17,[48263]=8,[152280]=37,[374747]=118,[391386]=161,[390175]=152,[374111]=107,[327574]=99,[374049]=106,[391517]=166,[377655]=144,[392950]=171,[392566]=170,[316803]=90,[305392]=89,[390161]=150,[391398]=163,[391395]=162,[390283]=160,[390270]=157,[274156]=80,[51052]=20,[207269]=65,[390236]=154,[207167]=61,[373926]=103,[207142]=60,[194679]=39,[391458]=164,[377047]=122,[374265]=109,[319230]=98,[383269]=147,[373923]=102,[276837]=84,[405166]=172,[356367]=101,[377440]=133,[377592]=140,[377590]=139,[377585]=137,[373930]=104,[374504]=112,[281238]=88,[48743]=10,[377580]=136,[207272]=66,[377629]=141,[377376]=132,[377351]=131,[377056]=123,[377226]=130,[389679]=148,[115989]=34,[42650]=1,[316941]=94,[45524]=2,[49020]=12,[317133]=95,[59057]=26,[49028]=13,[46584]=3,[276079]=83,[317198]=96,[389682]=149,[316867]=92,[85948]=30,[374574]=113,[374383]=111,[376905]=120,[49206]=16,[194844]=40,[275699]=81,[316838]=91,[374277]=110,[114556]=33,[377190]=129,[390259]=155,[378848]=146,[377637]=142,[390196]=153,[207104]=58,[48792]=11,[46585]=4,[317610]=97,[63560]=27,[374261]=108, },
	[790] = { [152261]=31,[404542]=193,[406646]=209,[378405]=89,[383314]=105,[215661]=57,[384909]=116,[216331]=58,[231663]=65,[31935]=17,[386568]=134,[405757]=200,[393071]=169,[403654]=181,[385422]=124,[387781]=141,[404357]=189,[403975]=187,[384914]=117,[1044]=4,[378285]=88,[96231]=25,[157047]=33,[85043]=22,[385427]=126,[387786]=142,[20066]=7,[383388]=110,[10326]=6,[200430]=42,[384027]=112,[406468]=207,[53376]=18,[403664]=182,[383328]=106,[387791]=143,[214202]=56,[209389]=53,[280373]=71,[230332]=62,[406154]=204,[393022]=166,[383396]=111,[20473]=8,[231895]=67,[378425]=90,[393024]=167,[406157]=205,[392961]=165,[53385]=19,[402971]=173,[85222]=23,[385633]=130,[387801]=144,[387993]=149,[114165]=28,[405461]=198,[385125]=118,[402912]=171,[325966]=76,[31821]=10,[231644]=64,[326732]=77,[406101]=203,[387805]=145,[409441]=216,[379008]=95,[403042]=176,[200025]=41,[200652]=45,[326734]=78,[387998]=150,[392907]=158,[408459]=214,[184662]=37,[204074]=51,[387808]=146,[407067]=213,[404306]=188,[385450]=127,[406158]=206,[406835]=210,[404512]=191,[406545]=208,[633]=2,[148039]=30,[86659]=24,[406872]=211,[392911]=159,[384815]=113,[200474]=43,[406064]=202,[405768]=201,[156910]=32,[255937]=70,[404834]=194,[392914]=160,[405289]=196,[405278]=195,[204077]=52,[387814]=147,[404540]=192,[248033]=69,[404436]=190,[406940]=212,[387879]=148,[403826]=186,[388007]=152,[375576]=82,[384820]=114,[210294]=54,[377043]=84,[403745]=185,[385349]=120,[392951]=164,[389539]=154,[383228]=104,[183998]=35,[82326]=21,[403530]=180,[231642]=63,[327193]=79,[379022]=97,[403495]=178,[403479]=177,[403026]=175,[53595]=20,[405607]=199,[402964]=172,[393114]=170,[31850]=11,[114154]=26,[393030]=168,[403696]=183,[392938]=163,[305394]=73,[1022]=3,[204018]=46,[385425]=125,[405355]=197,[392902]=157,[403698]=184,[183778]=34,[184575]=36,[388018]=153,[204019]=47,[388005]=151,[385515]=129,[234299]=68,[386653]=135,[403509]=179,[377053]=85,[391142]=156,[382536]=103,[200482]=44,[409439]=215,[392928]=162,[378457]=91,[377128]=86,[198034]=40,[24275]=9,[385639]=131,[384897]=115,[385726]=132,[387170]=139,[385464]=128,[223306]=59,[498]=1,[383342]=107,[196926]=39,[204054]=50,[385728]=133,[385129]=119,[6940]=5,[223817]=61,[378279]=87,[379391]=101,[343527]=80,[376996]=83,[378845]=93,[315924]=74,[204023]=48,[190784]=38,[379043]=98,[383344]=108,[378974]=94,[213644]=55,[387174]=140,[343721]=81,[379021]=96,[385414]=123,[378762]=92,[321136]=75,[31884]=16,[403010]=174,[114158]=27,[380188]=102,[115750]=29,[231667]=66,[386738]=137, },
	[786] = { [381655]=126,[375982]=101,[382039]=152,[17364]=13,[5394]=5,[381785]=138,[210689]=77,[198067]=65,[333974]=92,[60188]=26,[273221]=86,[200076]=71,[386443]=195,[381726]=133,[77472]=31,[117013]=44,[188443]=51,[382046]=157,[192077]=57,[378094]=107,[305483]=88,[384087]=182,[382685]=167,[108280]=37,[381666]=128,[117014]=46,[210853]=79,[334046]=94,[333919]=91,[114050]=41,[108281]=38,[33757]=15,[198838]=68,[51886]=22,[383010]=173,[382309]=164,[382947]=171,[114051]=42,[187874]=49,[30884]=14,[383012]=175,[197214]=63,[334308]=96,[384352]=185,[201900]=72,[381930]=142,[381867]=141,[114052]=43,[382888]=170,[381932]=143,[383016]=177,[382315]=165,[381678]=129,[383017]=178,[381743]=134,[383019]=179,[60103]=25,[381936]=144,[8042]=6,[390288]=197,[51505]=18,[1064]=3,[378241]=111,[382194]=160,[187880]=50,[384363]=188,[157153]=47,[73685]=29,[157154]=48,[377933]=102,[334195]=95,[192249]=60,[404522]=203,[192058]=55,[207399]=74,[404015]=201,[393905]=200,[51490]=17,[392352]=199,[196840]=61,[51514]=19,[381819]=140,[382197]=161,[383222]=180,[384450]=193,[378776]=122,[386474]=196,[16191]=11,[260878]=81,[108271]=36,[108287]=40,[382033]=151,[378443]=120,[384411]=190,[384405]=189,[384359]=187,[8512]=8,[384355]=186,[16166]=10,[384149]=184,[384143]=183,[61882]=28,[378271]=118,[383013]=176,[383011]=174,[378255]=112,[383009]=172,[382886]=169,[108285]=39,[198103]=66,[192222]=59,[378077]=104,[378193]=108,[16196]=12,[382201]=162,[390370]=198,[381764]=135,[382191]=159,[207778]=76,[192088]=58,[342240]=97,[382045]=156,[382042]=155,[382040]=153,[382021]=147,[57994]=23,[384444]=191,[191861]=54,[378310]=119,[382086]=158,[319930]=89,[382020]=146,[381946]=145,[265046]=85,[191634]=53,[382215]=163,[192063]=56,[378773]=121,[384447]=192,[197995]=64,[381787]=139,[404019]=202,[262303]=82,[381707]=131,[381689]=130,[77756]=33,[210714]=78,[381708]=132,[382027]=148,[378266]=113,[370]=1,[262624]=83,[383303]=181,[236501]=80,[51485]=16,[58875]=24,[8143]=7,[378268]=114,[381647]=124,[974]=2,[382030]=149,[378779]=123,[207401]=75,[382732]=168,[381776]=136,[378270]=117,[378079]=105,[98008]=35,[382032]=150,[79206]=34,[381650]=125,[280614]=87,[200071]=69,[344357]=98,[378081]=106,[198434]=67,[196884]=62,[385923]=194,[51533]=20,[262647]=84,[200072]=70,[404539]=204,[378075]=103,[382482]=166,[378211]=110,[73920]=30,[334033]=93,[61295]=27,[381782]=137,[204268]=73,[51564]=21, },
	[795] = { [372985]=109,[373049]=114,[139]=1,[62618]=22,[109186]=35,[193157]=49,[373178]=117,[341240]=93,[391284]=192,[377387]=141,[373180]=118,[193063]=46,[391095]=178,[373054]=115,[198068]=58,[372991]=110,[373310]=126,[372354]=101,[391288]=193,[321291]=88,[368275]=98,[238136]=78,[372611]=103,[341374]=95,[390972]=170,[199855]=60,[235587]=74,[200174]=62,[391228]=188,[263346]=82,[375994]=138,[372616]=104,[64843]=25,[373446]=129,[48045]=20,[373065]=116,[200209]=65,[390980]=172,[373003]=111,[265202]=84,[228260]=73,[132157]=43,[193134]=47,[390919]=166,[108920]=31,[263165]=81,[108968]=34,[314867]=87,[372370]=102,[391368]=196,[238558]=79,[47536]=17,[204197]=66,[390668]=149,[215768]=72,[596]=3,[196707]=54,[372309]=100,[288733]=86,[373202]=119,[390670]=150,[213634]=70,[155271]=44,[200183]=63,[377349]=140,[321377]=89,[372760]=105,[81749]=29,[335467]=91,[390767]=160,[392988]=201,[32375]=10,[32379]=11,[392507]=200,[64901]=26,[238100]=76,[199484]=59,[373273]=124,[73510]=28,[390996]=175,[391387]=198,[391124]=181,[9484]=6,[88625]=30,[373466]=133,[390615]=144,[196489]=52,[341273]=94,[373212]=120,[391381]=197,[391296]=194,[391242]=191,[391235]=190,[391233]=189,[391209]=187,[391208]=186,[391186]=185,[391161]=184,[162448]=45,[391154]=183,[393870]=202,[391112]=180,[391109]=179,[391090]=177,[122121]=40,[373280]=125,[390684]=152,[373456]=131,[375767]=135,[205385]=69,[372835]=106,[390994]=174,[373218]=121,[390622]=146,[390686]=154,[10060]=7,[605]=4,[390992]=173,[390977]=171,[390967]=169,[196985]=55,[390693]=157,[390781]=162,[123040]=41,[373221]=122,[108942]=32,[390689]=155,[390786]=163,[200128]=61,[390881]=165,[390770]=161,[197419]=57,[47515]=16,[391137]=182,[375901]=137,[238135]=77,[372969]=107,[390705]=158,[390947]=167,[390691]=156,[390685]=153,[390676]=151,[110744]=36,[390667]=148,[33076]=12,[373035]=112,[375888]=136,[390620]=145,[372972]=108,[214621]=71,[377422]=142,[15487]=9,[377065]=139,[390632]=147,[373481]=134,[373457]=132,[391079]=176,[373450]=130,[238063]=75,[373427]=128,[246287]=80,[391399]=199,[377438]=143,[64129]=24,[55676]=21,[528]=2,[390954]=168,[47585]=18,[263716]=83,[108945]=33,[194509]=50,[2050]=5,[322115]=90,[341167]=92,[373223]=123,[390765]=159,[391339]=195,[372307]=99,[15286]=8,[121536]=39,[196437]=51,[34861]=15,[196704]=53,[129250]=42,[373042]=113,[33206]=13,[200199]=64,[120644]=38,[390832]=164,[193155]=48,[64044]=23,[204883]=67,[34433]=14,[341997]=97,[341491]=96,[120517]=37,[205364]=68,[280749]=85,[47788]=19,[197045]=56,[73325]=27, },
}

local treeNodeEntryIDs = {
	[850]={ [112182]=386196,[112198]=107570,[112214]=64382,[112230]=275336,[112246]=382948,[112262]=383468,[112278]=392536,[112294]=388933,[112310]=383154,[112326]=383103,[112119]=385512,[112135]=383287,[112151]=12975,[112167]=871,[112183]=202168,[112199]=382940,[112215]=384110,[112231]=394307,[112247]=376079,[112263]=208154,[112279]=206315,[112295]=315720,[112311]=383703,[112327]=384042,[112136]=772,[112152]=6572,[112168]=281001,[112184]=386164,[112200]=382940,[112216]=392792,[112232]=107574,[112248]=392777,[112264]=184364,[112280]=388004,[112296]=383297,[112312]=390563,[114639]=390713,[112121]=388807,[112137]=262150,[112153]=236279,[112169]=386027,[112185]=262231,[112201]=382956,[112217]=382549,[112233]=384124,[112249]=103827,[112265]=85288,[112281]=1719,[112297]=388049,[112313]=386628,[112122]=12294,[112138]=383219,[112154]=384361,[112170]=202743,[112186]=3411,[112202]=384090,[112218]=382461,[112234]=391270,[112250]=275338,[112266]=383852,[112282]=383922,[112298]=12950,[112314]=227847,[114641]=383155,[112123]=7384,[112139]=262161,[112155]=394311,[112171]=386011,[112187]=386208,[112203]=203201,[112219]=202163,[112235]=382939,[112251]=382954,[112267]=383848,[112283]=389603,[112299]=392931,[112315]=383338,[114642]=400314,[112108]=384124,[112124]=202316,[112140]=383442,[112156]=394062,[112172]=386328,[114738]=190456,[112204]=384277,[114770]=107574,[112236]=390642,[112252]=5246,[112268]=215568,[112284]=396749,[112300]=280721,[114643]=386208,[112109]=394855,[112125]=316405,[112141]=385008,[112157]=384041,[112173]=385952,[112189]=29838,[112205]=6343,[112221]=391572,[112237]=392790,[112253]=23920,[112269]=81099,[112285]=152278,[112301]=316402,[112317]=389306,[114644]=386208,[112110]=392966,[112126]=29725,[112142]=248621,[112158]=202560,[112174]=384067,[112190]=382310,[112206]=382258,[112222]=384969,[112238]=382260,[114294]=390674,[112270]=385703,[112286]=383459,[112302]=393965,[112318]=386634,[112111]=29725,[112127]=383103,[112143]=152278,[112159]=1160,[112175]=202603,[112191]=383115,[112207]=316733,[112223]=384318,[112239]=18499,[114295]=396719,[112271]=383959,[112287]=394329,[112303]=382953,[112319]=383292,[112112]=386164,[112128]=118038,[112144]=167105,[112160]=386034,[112176]=203177,[112192]=384404,[112208]=6544,[112224]=382946,[112240]=382900,[112256]=228920,[112272]=383486,[112288]=391683,[112304]=228920,[112320]=383341,[112113]=394312,[112129]=384361,[112145]=281001,[112161]=386071,[112177]=385843,[112193]=383115,[112209]=382764,[112225]=391271,[112241]=275339,[112257]=390563,[112273]=383885,[112289]=385059,[112305]=384063,[112321]=385704,[112130]=316440,[112146]=383430,[112162]=385840,[112178]=390725,[112194]=384404,[112210]=12323,[112226]=390135,[112242]=46968,[112258]=382953,[112274]=393950,[112290]=383916,[112306]=202095,[112322]=393967,[112255]=392936,[114296]=396719,[112115]=280001,[112131]=385571,[112147]=845,[112163]=1161,[112179]=382896,[112195]=383115,[112211]=384100,[112227]=390123,[112243]=391997,[112259]=383854,[112275]=335077,[112291]=388903,[112307]=386394,[112323]=275334,[114733]=400205,[114739]=400803,[112116]=386477,[112132]=386357,[112148]=383293,[112164]=384072,[112180]=386285,[112196]=384404,[112212]=382764,[112228]=390140,[112244]=390675,[112260]=280392,[112276]=383877,[112292]=383295,[112254]=346002,[112324]=385888,[112188]=97462,[114293]=383082,[112117]=383317,[112133]=260643,[112149]=190456,[112165]=397103,[112181]=382895,[112197]=390354,[112213]=215571,[112229]=390138,[112245]=382767,[112261]=23881,[112277]=184367,[112293]=383605,[112309]=389308,[112325]=384036,[114740]=386630,[112220]=383762,[112118]=334779,[112134]=184783,[112150]=386030,[112166]=152278,[114769]=401150, },
	[774]={ [100516]=389660,[100532]=385737,[100548]=294029,[100564]=260248,[100580]=257621,[100596]=193533,[100612]=378739,[100628]=375891,[100644]=199921,[100660]=378442,[100676]=199532,[100692]=393344,[100517]=389019,[100533]=385718,[100549]=378916,[100565]=263186,[100581]=204089,[100597]=321460,[100613]=269737,[100629]=201430,[100645]=378010,[100661]=267116,[100677]=389654,[100518]=388057,[100534]=400456,[100550]=378934,[100566]=259387,[100582]=260240,[100598]=260367,[100614]=273887,[100630]=2643,[100646]=266921,[100662]=378209,[100678]=378244,[100519]=388056,[100535]=384790,[100551]=186270,[100567]=265895,[100583]=378771,[100599]=378905,[100615]=271788,[100631]=378002,[100647]=199483,[100663]=193455,[100679]=257944,[100520]=388045,[100536]=384799,[100552]=212436,[100568]=259495,[100584]=260228,[100600]=321293,[100616]=5116,[100632]=343244,[100648]=34026,[100664]=193530,[100680]=193532,[100521]=388042,[100537]=320976,[100553]=187708,[100569]=260331,[100585]=257044,[100601]=378767,[100617]=19801,[100633]=321468,[100649]=343242,[100665]=378210,[100681]=185789,[100522]=388039,[100538]=53351,[100554]=260285,[100570]=360952,[100586]=378888,[100602]=391559,[100618]=162488,[100634]=109215,[100650]=109248,[100666]=393933,[100682]=359844,[100523]=264735,[100539]=53351,[100555]=321290,[100571]=360966,[100587]=288613,[100603]=260393,[100619]=385539,[100635]=378004,[100651]=213691,[100667]=378743,[100683]=217200,[100524]=231548,[100540]=147362,[100556]=378951,[100572]=264332,[100588]=378769,[100604]=321018,[100620]=236776,[100636]=343247,[100652]=392060,[100668]=378207,[100525]=321530,[100541]=34026,[100557]=203415,[100573]=378940,[100589]=194595,[100605]=190852,[100621]=19577,[100637]=34477,[100653]=378740,[100669]=19574,[100510]=389880,[100526]=120360,[100542]=259489,[100558]=378953,[100574]=378962,[100590]=392060,[100606]=378765,[100622]=260241,[100638]=270581,[100654]=378745,[100670]=115939,[100511]=389865,[100527]=385810,[100543]=187707,[100559]=378955,[100575]=271014,[100591]=321287,[100607]=389449,[100623]=378014,[100639]=378007,[100655]=378750,[100671]=56315,[100512]=389866,[100528]=385739,[100544]=257620,[100560]=378961,[100576]=155228,[100592]=378907,[100608]=386878,[100624]=147362,[100640]=1513,[100656]=199530,[100672]=321014,[100513]=389882,[100529]=385695,[100545]=269751,[100561]=378950,[100577]=186387,[100593]=378766,[100609]=260404,[100625]=260309,[100641]=187698,[100657]=131894,[100673]=120679,[100514]=390231,[100530]=268501,[100546]=190925,[100562]=186289,[100578]=19434,[100594]=378880,[100610]=378913,[100626]=212431,[100658]=191384,[100674]=199528,[100515]=386870,[100531]=385709,[100547]=378948,[100563]=378937,[100579]=400472,[100595]=260243,[100611]=378910,[100627]=342049,[100643]=343248,[100659]=378205,[100675]=392053, },
	[852]={ [112517]=121411,[112533]=200733,[112549]=196938,[112565]=385408,[112581]=14062,[112597]=58423,[112613]=382509,[112629]=319949,[112645]=381619,[112661]=381669,[112677]=400783,[112518]=394983,[112534]=381877,[112550]=343142,[112566]=381894,[112582]=381621,[112598]=319951,[112614]=121471,[112630]=5938,[112646]=378803,[112662]=360194,[112678]=381798,[112519]=381624,[112535]=381988,[112551]=51690,[112567]=394321,[112583]=36554,[112599]=277953,[112615]=108209,[112631]=1776,[112647]=131511,[112663]=381800,[112679]=328085,[112504]=381630,[112520]=79134,[112536]=354897,[112552]=386823,[112568]=14161,[112584]=379005,[112600]=319175,[112616]=382503,[112632]=79008,[112648]=381623,[112664]=381652,[114736]=385627,[112505]=381664,[112521]=378436,[112537]=381839,[112553]=381846,[112569]=256188,[112585]=31224,[112601]=382017,[112617]=36554,[112633]=231719,[112649]=14190,[112665]=381634,[114737]=31230,[112506]=385424,[112522]=319066,[112538]=381989,[112554]=381985,[112570]=195457,[112586]=257505,[112602]=385722,[112618]=382528,[112634]=193546,[112650]=280716,[112666]=152152,[112507]=385408,[112523]=394332,[112539]=381990,[112555]=382746,[112571]=279876,[112587]=200758,[112603]=280719,[112619]=382524,[112635]=378427,[112651]=14983,[112667]=381802,[112508]=255989,[112524]=381622,[112540]=395422,[112556]=272026,[112572]=2094,[112588]=382507,[112604]=277925,[112620]=245687,[112636]=231691,[112652]=381542,[112668]=381799,[112509]=381640,[112525]=385616,[112541]=381982,[112557]=381828,[112573]=6770,[112589]=394309,[112605]=382506,[112621]=382514,[112653]=381543,[112669]=385478,[112510]=381626,[112526]=378996,[112542]=256170,[112558]=235484,[112574]=57934,[112590]=382513,[112606]=384631,[112622]=382515,[112638]=400804,[112654]=378813,[112670]=381673,[112511]=392384,[112527]=381845,[112543]=315508,[112559]=381878,[112575]=378807,[112591]=382508,[112607]=382504,[112623]=393972,[112639]=382245,[112655]=381637,[112671]=196861,[112512]=193640,[112528]=381885,[112544]=79096,[112560]=196922,[112576]=108208,[112592]=385408,[112608]=382525,[112624]=196976,[112640]=382238,[112656]=5761,[112672]=200806,[112513]=319032,[112529]=256165,[112545]=13750,[112561]=13877,[112577]=185313,[112593]=382015,[112609]=382517,[112625]=382505,[112641]=137619,[112657]=5277,[112673]=381632,[112514]=51667,[112530]=271877,[112546]=381822,[112562]=383281,[112578]=91023,[112594]=382523,[112610]=394320,[112626]=394023,[112642]=193531,[112658]=381801,[112674]=381627,[112515]=381629,[112531]=108216,[112547]=344363,[112563]=382742,[112579]=393970,[112595]=382518,[112611]=382511,[112627]=343160,[112643]=193539,[112659]=381797,[112675]=36554,[112516]=381631,[112532]=61329,[112548]=35551,[112564]=196937,[112580]=381620,[112596]=382512,[112612]=185314,[112628]=193537,[112644]=196924,[112660]=255544,[112676]=2823, },
	[854]={ [112947]=390142,[112836]=389811,[112852]=320770,[112868]=389705,[112884]=207697,[112900]=393827,[112916]=389697,[112932]=391275,[112948]=343311,[112837]=370965,[112853]=198793,[112869]=320341,[112885]=263642,[112901]=389708,[112917]=391409,[112933]=389977,[112949]=203550,[112838]=388111,[112854]=204596,[112870]=263648,[112886]=389997,[112902]=390808,[112918]=389695,[112934]=390154,[112950]=388108,[112823]=206478,[112839]=395446,[112855]=389799,[112871]=343014,[112887]=207548,[112903]=390213,[112919]=389783,[112951]=320413,[112824]=258881,[112840]=320635,[112856]=207666,[112872]=389220,[112888]=227174,[112904]=202137,[112920]=389781,[112936]=389978,[115247]=196555,[112825]=390158,[112841]=320386,[112857]=388110,[112873]=207739,[112889]=389711,[112905]=391178,[112921]=196718,[115248]=205411,[112826]=391189,[112842]=232893,[112858]=320418,[112874]=390163,[112890]=391165,[112906]=321028,[112922]=235893,[112938]=388109,[112954]=388116,[112827]=388107,[112843]=207347,[112859]=207684,[112875]=391429,[112891]=343207,[112907]=389958,[112923]=213410,[112939]=198013,[112955]=258887,[112828]=388114,[112844]=320421,[112860]=389849,[112876]=389732,[112892]=207387,[112908]=212084,[112924]=320331,[112940]=203555,[112956]=258860,[112829]=388106,[112845]=393822,[112861]=213010,[112877]=336639,[112893]=268175,[112909]=206477,[112925]=320313,[112941]=258876,[112957]=388118,[112830]=320415,[112846]=389696,[112862]=389694,[112878]=389718,[112894]=247454,[112910]=320412,[112926]=278326,[112942]=347461,[112958]=389687,[112831]=388112,[112847]=204909,[112863]=389824,[112879]=389715,[112895]=209258,[112911]=179057,[112927]=217832,[112943]=206476,[112959]=388113,[112832]=320374,[112848]=183782,[112864]=204021,[112880]=326853,[112896]=389985,[112912]=389763,[112928]=320416,[112944]=389688,[112833]=328725,[112849]=320361,[112865]=389729,[112881]=389721,[112897]=389976,[112913]=390152,[112929]=389693,[112945]=258925,[112834]=206416,[112850]=389846,[112866]=389724,[112882]=389720,[112898]=207407,[112914]=391397,[112930]=390163,[112946]=342817,[115246]=211881,[112953]=343206,[115244]=393029,[112835]=389819,[112851]=320654,[112867]=202138,[112883]=320387,[112899]=218612,[112915]=209281,[112931]=391429,[115245]=343017, },
	[793]={ [112963]=197628,[103289]=2637,[103305]=192081,[103321]=102793,[103098]=383192,[103114]=392325,[103130]=391969,[103162]=106951,[103178]=102543,[103194]=393611,[103210]=203965,[103226]=372945,[109872]=393954,[103274]=377801,[103290]=24858,[103306]=16931,[103322]=102359,[103099]=145108,[103115]=203651,[103131]=392116,[103147]=393771,[103163]=202031,[103179]=391875,[103195]=231064,[103211]=50334,[103227]=371999,[109873]=393940,[112965]=197625,[103291]=33786,[103307]=2908,[103323]=29166,[103100]=33763,[103116]=207385,[103132]=392099,[103148]=391785,[103164]=48484,[103180]=61336,[103196]=200854,[103212]=372567,[103228]=372618,[109841]=202347,[109859]=202770,[103276]=102401,[103292]=33873,[103308]=288826,[103324]=124974,[109855]=393960,[103101]=132158,[103117]=383191,[103133]=392301,[103149]=384668,[103165]=384667,[103181]=391045,[103197]=135288,[103213]=238049,[103229]=377811,[109839]=102560,[109858]=79577,[103277]=1822,[103293]=2782,[103309]=319454,[103325]=378986,[103230]=155835,[103102]=382550,[103118]=393371,[103134]=392302,[103150]=390864,[103166]=391174,[103182]=384665,[103198]=370586,[109844]=205636,[109860]=274281,[109857]=393958,[103214]=203964,[103278]=197626,[103294]=18562,[103310]=108238,[103326]=377847,[109856]=390378,[103103]=392288,[103119]=391528,[103135]=392160,[103151]=202028,[103167]=16974,[103183]=390772,[103199]=393414,[103215]=384721,[103231]=203953,[112967]=197628,[109845]=202918,[103279]=194153,[103295]=774,[103311]=378988,[103216]=50334,[103232]=345208,[103104]=102351,[103120]=33891,[103136]=197721,[103152]=391881,[103168]=391872,[103184]=285381,[103200]=391528,[109846]=114107,[109862]=202430,[109843]=327541,[109840]=394046,[103280]=78674,[103296]=301768,[103312]=106898,[109861]=202342,[103224]=50334,[103105]=207383,[103121]=392256,[103137]=392410,[103153]=391347,[103169]=391078,[103185]=383352,[103201]=102558,[109847]=394121,[109863]=400059,[109832]=202345,[109854]=88747,[103281]=392378,[103297]=327993,[103313]=377842,[109838]=391528,[103218]=372119,[103106]=392162,[103122]=391951,[103138]=382559,[103154]=391978,[103170]=274837,[103186]=202021,[103202]=391969,[109848]=394048,[109864]=393991,[114725]=400533,[112966]=197625,[103282]=2782,[103298]=22842,[103314]=385786,[109833]=191034,[103219]=377210,[103107]=197073,[103123]=391888,[103139]=382552,[103155]=386318,[103171]=319439,[103187]=16864,[103203]=370695,[109849]=194223,[109865]=394115,[114726]=400531,[103275]=252216,[103283]=2782,[103299]=22570,[103315]=5211,[109834]=393956,[109850]=393760,[103108]=740,[103124]=392315,[103140]=197061,[103156]=400320,[103172]=391972,[103188]=5217,[103204]=393618,[103220]=372943,[114771]=155580,[112968]=197625,[114648]=202425,[103284]=377796,[103300]=1079,[103316]=99,[109835]=343647,[103221]=204053,[103109]=231032,[103125]=392356,[103141]=102342,[103157]=158476,[103173]=390902,[103189]=377835,[103205]=155578,[109851]=394094,[109867]=78675,[114808]=403521,[114809]=403949,[103285]=231050,[103301]=106832,[103317]=159286,[114298]=400140,[103094]=50464,[103110]=200390,[103126]=392124,[103142]=392220,[103158]=391947,[103174]=391951,[103190]=210706,[103206]=371905,[103222]=80313,[109868]=393868,[109853]=383195,[109837]=392999,[103286]=93402,[103302]=106839,[103318]=131768,[114299]=400142,[114700]=204066,[103111]=145205,[103127]=155675,[103143]=113043,[103159]=231063,[103175]=391888,[103191]=6807,[103207]=200851,[114698]=400222,[103223]=393427,[109852]=394065,[109836]=394058,[103287]=132469,[103303]=108299,[103319]=231040,[114300]=400129,[103096]=328025,[103112]=404521,[103128]=392167,[103144]=391037,[103160]=391709,[103176]=391548,[103192]=328767,[103208]=158477,[114699]=400278,[109870]=394081,[109831]=383197,[112964]=197628,[103288]=197524,[103304]=400158,[103320]=48438,[109842]=279620,[103097]=392221,[103113]=158478,[103129]=274902,[103145]=391700,[103161]=236068,[103177]=391528,[103193]=61336,[103209]=203962,[103225]=203974,[109871]=400636,[114701]=400254, },
	[701]={ [87702]=363916,[87591]=375796,[87607]=371270,[87623]=376150,[87639]=375777,[87655]=370781,[87671]=370962,[87687]=374346,[87703]=370897,[87592]=377086,[87608]=376237,[87624]=376138,[87640]=369375,[87656]=375783,[87672]=369089,[87688]=369909,[87704]=375554,[87593]=377082,[87609]=376236,[87625]=367226,[87641]=370452,[87657]=375801,[87673]=370837,[87689]=369939,[87705]=375556,[87594]=370960,[87610]=385696,[87626]=362874,[87642]=386342,[87658]=370783,[87674]=365937,[87690]=368432,[87706]=375517,[87595]=377100,[87611]=373861,[87627]=355936,[87643]=386336,[87659]=368847,[87675]=371032,[87707]=387761,[87596]=375783,[87612]=363534,[87628]=364343,[87644]=370839,[87660]=386283,[87676]=374968,[87692]=351338,[87708]=358385,[87597]=359816,[87613]=357170,[87629]=366155,[87645]=375757,[87661]=375725,[87677]=387787,[87693]=376164,[87709]=369913,[87598]=369908,[87614]=378196,[87630]=369297,[87646]=375618,[87662]=376888,[87678]=375561,[87694]=375510,[87710]=375520,[87599]=371257,[87615]=372527,[87631]=375722,[87647]=359073,[87663]=386272,[87679]=374348,[87695]=372048,[87711]=371806,[87584]=375528,[87600]=381921,[87616]=371426,[87632]=359793,[87648]=371034,[87664]=375797,[87680]=375577,[87696]=369459,[87712]=376166,[87585]=375443,[87601]=376204,[87617]=376179,[87633]=370062,[87649]=375722,[87665]=375087,[87681]=375574,[87697]=375544,[87713]=370553,[87586]=368838,[87602]=376207,[87618]=373834,[87634]=373270,[87650]=371038,[87666]=386405,[87682]=374227,[87698]=369990,[87714]=372469,[87587]=360806,[87603]=370537,[87619]=381922,[87635]=377099,[87651]=370455,[87667]=371016,[87683]=370888,[87699]=376930,[87715]=360995,[87588]=370886,[87604]=368412,[87620]=376210,[87636]=370819,[87652]=370845,[87668]=375721,[87684]=387341,[87700]=374251,[87716]=365585,[87589]=375542,[87605]=376240,[87621]=376239,[87637]=369846,[87653]=370821,[87669]=357211,[87685]=370665,[87701]=375406,[87590]=369908,[87606]=372233,[87622]=371832,[87638]=370867,[87654]=386348,[87670]=376872,[87686]=365933, },
	[795]={ [103767]=34861,[103783]=373427,[103799]=341273,[103815]=392507,[103831]=110744,[103847]=373456,[103863]=321291,[103688]=238135,[103704]=214621,[103720]=390684,[103736]=392988,[103752]=193155,[103768]=196489,[103784]=391228,[103800]=377065,[103816]=391288,[103832]=373466,[103848]=341167,[103864]=32379,[103705]=372969,[103721]=322115,[103737]=235587,[103753]=200199,[103769]=391208,[103785]=377387,[103801]=288733,[103817]=373273,[103833]=390972,[103849]=32375,[103865]=34433,[103674]=228260,[103690]=373003,[103706]=314867,[103722]=194509,[103738]=372307,[103754]=341997,[114735]=373218,[103786]=391296,[103802]=391095,[103818]=390996,[103834]=108942,[103850]=390622,[103866]=393870,[103675]=372760,[103691]=246287,[103707]=373065,[103723]=81749,[103739]=372611,[103755]=64843,[103771]=196707,[103787]=373310,[103803]=205385,[103819]=391112,[103835]=373446,[103851]=132157,[103867]=528,[103676]=391124,[103692]=238063,[103708]=372985,[103724]=198068,[103740]=391387,[103756]=391161,[103772]=196437,[103788]=200174,[103804]=375994,[103820]=108968,[103836]=390670,[103852]=390620,[103868]=73325,[103677]=390767,[103693]=215768,[103709]=373054,[103725]=372972,[103741]=391381,[103757]=391209,[103773]=200209,[103789]=375767,[103805]=375888,[103821]=108945,[103837]=375901,[103853]=121536,[103869]=139,[103678]=205364,[103694]=390786,[103710]=123040,[103726]=390686,[103742]=265202,[103758]=204883,[103774]=47788,[103790]=263346,[103806]=47585,[103822]=373481,[103838]=373223,[103854]=213634,[103870]=33076,[103679]=263165,[103695]=390770,[103711]=390832,[103727]=47536,[103743]=200183,[103759]=390881,[103775]=2050,[103791]=238558,[103807]=48045,[103823]=109186,[103839]=390668,[103855]=390632,[103871]=372354,[103680]=391109,[103696]=390705,[103712]=373427,[103728]=197419,[103744]=390994,[103760]=321377,[103776]=88625,[103792]=15487,[103808]=335467,[103824]=368275,[103840]=199855,[103856]=64129,[103872]=390667,[103681]=391399,[103697]=373180,[103713]=33206,[103729]=390691,[103745]=391368,[103761]=390947,[103777]=372616,[103793]=64044,[103809]=341491,[103825]=238100,[103841]=15286,[103857]=390615,[103873]=377438,[103682]=391090,[103698]=390781,[103714]=373035,[103746]=391339,[103762]=390954,[103778]=391154,[103794]=263716,[103810]=391284,[103826]=373450,[103842]=280749,[103858]=193063,[108225]=391079,[103683]=373212,[103699]=390765,[103715]=372991,[103731]=390693,[103747]=372370,[103763]=390980,[103779]=193157,[103795]=391242,[103811]=155271,[103827]=120644,[103843]=9484,[103859]=108920,[108226]=373049,[103684]=373202,[103700]=373178,[103716]=129250,[103732]=47515,[103748]=390967,[103764]=196985,[103780]=391233,[103796]=341374,[103812]=73510,[103828]=122121,[103844]=10060,[103860]=390919,[103685]=391235,[103701]=373042,[103717]=197045,[103733]=372835,[103749]=391186,[103765]=238136,[103781]=373280,[103797]=373221,[103813]=162448,[103829]=373457,[103845]=196704,[103861]=377422,[103686]=391137,[103702]=193134,[103718]=204197,[103734]=390992,[103750]=390977,[103766]=596,[103782]=377349,[103798]=341240,[103814]=199484,[103830]=120517,[103846]=390676,[103862]=605,[114588]=55676,[103687]=62618,[103703]=390689,[103719]=390685,[103735]=372309,[103751]=64901,[103770]=200128, },
	[781]={ [101472]=396166,[101488]=388193,[101504]=116705,[101520]=389578,[101536]=389577,[101552]=386276,[101361]=210802,[101377]=388615,[101393]=388701,[101409]=387765,[101425]=388854,[101441]=383785,[101457]=387256,[101473]=123904,[101489]=388849,[101505]=344359,[101521]=394123,[101537]=393400,[101362]=196725,[101378]=115310,[101394]=115151,[101410]=116680,[101426]=116645,[101442]=389942,[101458]=122281,[101474]=152175,[101490]=392985,[101506]=115078,[101522]=122278,[101538]=397251,[101363]=197900,[101379]=197908,[101395]=281231,[101411]=196736,[101427]=280197,[101443]=387230,[101459]=387625,[101475]=323999,[101491]=392983,[101507]=116841,[101523]=388809,[101539]=387184,[101364]=388564,[101380]=197915,[101396]=325197,[101412]=387046,[101428]=152173,[101444]=387638,[101460]=325177,[101476]=195300,[101492]=196740,[101508]=107428,[101524]=388674,[101540]=322740,[101365]=388604,[101381]=388212,[101397]=322118,[101413]=388681,[101429]=137639,[101445]=393516,[101461]=383695,[101477]=388661,[101493]=392958,[101509]=115175,[101525]=389574,[101541]=383707,[101366]=388517,[101382]=388031,[101398]=388551,[101414]=264348,[101430]=391370,[101446]=386937,[101462]=322510,[101478]=392993,[101494]=392970,[101510]=231602,[101526]=392910,[101542]=325153,[102626]=218164,[101367]=393460,[101383]=388779,[101399]=388593,[101415]=392994,[101431]=391330,[101447]=383714,[101463]=322507,[101479]=405044,[101495]=116095,[101511]=388664,[101527]=123986,[101543]=387219,[102627]=388874,[101368]=124081,[101384]=388038,[101400]=274963,[101416]=218164,[101432]=101545,[101448]=325093,[101464]=115181,[101480]=392989,[101496]=115203,[101512]=101643,[101528]=115098,[101544]=132578,[101369]=388548,[101385]=388847,[101401]=197895,[101417]=392979,[101433]=388856,[101449]=280515,[101465]=386965,[101481]=392986,[101497]=388813,[101513]=388812,[101529]=388811,[101545]=383700,[114821]=404408,[101370]=124682,[101386]=337209,[101402]=388682,[101418]=393098,[101434]=220357,[101450]=115399,[101466]=383994,[101482]=394923,[101498]=388814,[101514]=328670,[101530]=392900,[101546]=393357,[114822]=392991,[101371]=388740,[101387]=388511,[101403]=116645,[101419]=388846,[101435]=392982,[101451]=121253,[101467]=383697,[101483]=388848,[101499]=387276,[101515]=122783,[101531]=328669,[114297]=399226,[101356]=274909,[101372]=388491,[101388]=343655,[101404]=400089,[101420]=122470,[101436]=116847,[101452]=124502,[101468]=383698,[101484]=386941,[101500]=389575,[101516]=116844,[101532]=115313,[101548]=196730,[101357]=387991,[101373]=388661,[101389]=388218,[101405]=400053,[101421]=391383,[101437]=325201,[101453]=119582,[101469]=196737,[101485]=386276,[101501]=322113,[101517]=157411,[101533]=389579,[101549]=116847,[101358]=274586,[101374]=122281,[101390]=116849,[101406]=191837,[101422]=115396,[101438]=397768,[101470]=322960,[101486]=394093,[101502]=115008,[101518]=196607,[101534]=394110,[101550]=386941,[101359]=388193,[101375]=388509,[101391]=388020,[101407]=388047,[101423]=113656,[101439]=387035,[101455]=322120,[101471]=343743,[101487]=391412,[101503]=115173,[101519]=388686,[101535]=115315,[101551]=386949,[114729]=400629,[101360]=198898,[101376]=388477,[101392]=399491,[101408]=388023,[101424]=121817,[101440]=324312,[101456]=388505,[101547]=115176, },
	[658]={ [80307]=5143,[80148]=389713,[80164]=383121,[80180]=235450,[80196]=384858,[80212]=270233,[80228]=12982,[80244]=190447,[80260]=44457,[80276]=383499,[80292]=384060,[80308]=153626,[80149]=382800,[80165]=382292,[80181]=45438,[80197]=384612,[80229]=378919,[80245]=257537,[80261]=383391,[80277]=269650,[80293]=321420,[80309]=383661,[80150]=386539,[80166]=343183,[80182]=382424,[80198]=281482,[80214]=382103,[80230]=205027,[80246]=205030,[80262]=384174,[80278]=343222,[80294]=236628,[80310]=384651,[80151]=383243,[80167]=391102,[80183]=55342,[80199]=114923,[80215]=378901,[80231]=379993,[80247]=378198,[80263]=384033,[80279]=383604,[80295]=383782,[80152]=110959,[80168]=382481,[80184]=382820,[80200]=205028,[80216]=382144,[80248]=378947,[80264]=205020,[80280]=269644,[80296]=236457,[80153]=382268,[80169]=382289,[80185]=382569,[80201]=231564,[80217]=378433,[80233]=236662,[80249]=153595,[80265]=155148,[80281]=2948,[80297]=321752,[80154]=31589,[80170]=382293,[80186]=157997,[80202]=235711,[80218]=278309,[80234]=381706,[80250]=378448,[80266]=383476,[80282]=108853,[80298]=79684,[80139]=205026,[80155]=382490,[80171]=116011,[80187]=382493,[80203]=384861,[80219]=155149,[80235]=12472,[80251]=382110,[80267]=203275,[80283]=11366,[80299]=365350,[80140]=30449,[80156]=382826,[80172]=1463,[80188]=235224,[80204]=321387,[80220]=199786,[80236]=378406,[80252]=383860,[80268]=383659,[80284]=387044,[80300]=321526,[80141]=382440,[80157]=386828,[80173]=383092,[80189]=387807,[80205]=383980,[80221]=381244,[80237]=31687,[80253]=383810,[80269]=383967,[80285]=257541,[80301]=321745,[80142]=205036,[80158]=382270,[80174]=342245,[80190]=321739,[80206]=264354,[80222]=378749,[80238]=205024,[80254]=205023,[80270]=383489,[80286]=157642,[80302]=321507,[80143]=386763,[80159]=342249,[80175]=475,[80191]=342231,[80207]=205022,[80223]=380154,[80239]=235219,[80255]=383665,[80271]=383634,[80287]=117216,[80303]=384581,[80144]=113724,[80160]=157981,[80176]=11426,[80192]=759,[80208]=205025,[80224]=56377,[80240]=190356,[80256]=205029,[80272]=383669,[80288]=235870,[80304]=376103,[80145]=389627,[80161]=382297,[80177]=66,[80193]=384276,[80209]=12051,[80225]=379049,[80241]=30455,[80257]=343230,[80273]=383886,[80289]=342344,[80305]=384683,[80146]=153561,[80162]=108839,[80178]=235313,[80194]=384374,[80210]=384187,[80226]=205021,[80242]=84714,[80258]=2120,[80274]=86949,[80290]=157980,[80306]=44425,[80147]=31661,[80163]=212653,[80179]=390218,[80195]=384452,[102429]=385167,[80227]=112965,[80243]=44614,[80259]=205037,[80275]=190319,[80291]=383676,[102428]=378756, },
	[750]={ [96165]=253593,[96181]=343294,[96197]=48263,[96213]=48792,[96229]=47568,[96245]=49143,[96261]=377668,[96277]=219786,[96293]=390279,[96309]=195679,[96325]=46584,[96166]=391477,[96182]=206967,[96198]=391546,[96214]=373923,[96230]=377190,[96246]=49020,[96262]=377655,[96278]=194679,[96294]=152280,[96310]=276023,[96326]=85948,[96167]=391386,[96183]=374261,[96199]=48707,[96215]=373930,[96231]=207057,[96247]=51128,[96263]=205723,[96279]=195292,[96295]=115989,[96311]=49206,[96327]=55090,[96168]=391517,[96184]=356367,[96200]=49998,[96216]=207104,[96232]=376251,[96248]=376905,[96264]=114556,[96280]=317610,[96296]=207317,[96312]=377514,[96328]=77575,[96169]=391458,[96185]=273952,[96201]=46585,[96217]=391566,[96233]=316803,[96249]=317198,[96265]=206970,[96281]=390236,[96297]=377585,[96313]=390275,[96329]=316867,[96170]=374715,[96186]=276079,[96202]=316916,[96218]=405166,[96234]=51271,[96250]=377076,[96266]=221536,[96282]=390196,[96298]=207269,[96314]=49530,[96330]=390161,[96171]=273953,[96187]=374265,[96203]=327574,[96235]=207142,[96251]=377073,[96267]=108199,[96283]=390259,[96299]=207264,[96315]=152280,[96331]=316941,[96172]=207167,[96188]=111673,[96204]=374049,[96220]=281238,[96236]=377226,[96252]=207061,[96268]=273946,[96284]=377440,[96300]=374737,[96316]=319230,[96332]=390268,[96173]=378848,[96189]=392566,[96205]=374111,[96221]=194913,[96253]=377098,[96269]=49028,[96285]=207289,[96301]=377629,[96317]=194916,[96333]=42650,[96174]=205727,[96190]=374504,[96206]=48743,[96222]=152279,[96238]=377092,[96254]=377083,[96270]=219809,[96286]=377590,[96302]=206974,[96318]=207272,[96334]=377592,[96175]=373926,[96191]=389679,[96207]=212552,[96223]=377047,[96239]=194912,[96255]=374747,[96271]=206940,[96287]=276837,[96303]=195182,[96319]=390175,[96176]=374383,[96192]=389682,[96208]=374598,[96224]=279302,[96240]=57330,[96256]=391398,[96272]=317133,[96288]=377587,[96304]=206930,[96320]=207311,[96161]=392950,[96177]=383269,[96193]=221562,[96209]=374574,[96225]=207230,[96241]=316838,[96257]=374717,[96273]=194662,[96289]=390283,[96305]=50842,[96321]=377580,[96162]=207126,[96178]=47568,[96194]=51052,[96210]=45524,[96226]=377376,[96242]=377056,[96258]=194844,[96274]=221699,[96290]=390270,[96306]=81136,[96322]=275699,[96163]=281208,[96179]=194878,[96195]=374030,[96211]=47528,[96227]=377351,[96243]=59057,[96259]=377640,[96275]=274156,[96291]=277234,[96307]=391395,[96323]=390166,[96164]=376938,[96180]=391571,[96196]=374277,[96212]=207200,[96228]=305392,[96244]=49184,[96260]=377637,[96276]=206931,[96292]=377537,[96308]=55233,[96324]=63560, },
	[790]={ [102524]=406940,[102540]=183998,[102556]=392928,[102572]=392951,[102588]=385639,[102604]=1022,[102620]=385464,[115673]=409439,[102445]=31850,[115466]=386738,[102477]=393024,[102493]=406064,[115020]=404357,[102541]=214202,[102557]=231667,[102573]=200652,[102589]=234299,[102621]=377053,[115164]=403975,[102430]=204019,[102446]=378762,[102462]=280373,[102478]=377043,[102494]=402912,[102510]=405289,[115021]=405278,[102542]=157047,[102558]=387791,[102574]=200474,[102590]=231663,[102606]=384909,[102622]=385427,[115165]=403509,[102431]=53595,[102447]=389539,[102463]=386568,[102479]=24275,[102511]=406157,[115022]=383342,[102543]=223306,[102559]=388005,[102575]=383388,[102591]=96231,[102623]=10326,[102432]=379022,[102448]=31884,[102464]=406101,[102496]=231895,[102512]=406158,[115023]=403745,[102544]=387998,[102560]=114165,[102576]=387170,[102592]=230332,[102608]=408459,[102624]=376996,[115167]=405757,[102433]=385422,[102449]=378279,[102465]=375576,[102481]=204054,[102497]=31884,[102513]=343721,[115024]=403026,[102545]=85222,[102561]=114158,[102577]=392907,[102593]=31884,[102609]=385425,[102625]=190784,[115168]=379391,[102434]=378457,[102450]=379043,[102466]=387174,[102498]=184575,[102514]=404306,[102530]=404540,[102546]=200430,[102562]=387808,[102578]=248033,[102594]=384914,[115169]=405768,[102435]=378845,[115456]=391142,[102467]=321136,[115488]=382536,[102499]=53385,[102515]=403010,[102547]=392911,[102563]=53376,[102579]=388007,[102595]=384820,[102611]=31884,[102436]=204023,[102452]=393030,[102468]=209389,[115489]=223817,[102516]=402971,[102532]=200025,[102548]=31821,[102564]=387781,[102580]=196926,[102596]=183778,[102612]=385450,[102437]=378285,[102453]=85043,[102469]=378425,[115490]=223817,[102533]=156910,[102549]=498,[102565]=392938,[102581]=325966,[102597]=385515,[115473]=406646,[102476]=213644,[115465]=379391,[102438]=315924,[102454]=378974,[102470]=385726,[102451]=379021,[115467]=379391,[102518]=403042,[102534]=20473,[102550]=82326,[102566]=387879,[102461]=393071,[102598]=377128,[102614]=385129,[115454]=305394,[115453]=406545,[115443]=403664,[102439]=393022,[115444]=403530,[102455]=152261,[102471]=31935,[115440]=403495,[102503]=403698,[102519]=184662,[102535]=387801,[102551]=210294,[102567]=200482,[102583]=633,[102599]=384897,[102615]=385125,[115439]=406872,[102525]=405355,[115034]=402964,[111887]=393114,[102440]=204074,[102456]=86659,[102472]=378405,[115051]=326732,[102504]=383328,[115043]=255937,[102536]=392961,[102552]=392902,[102568]=216331,[102584]=115750,[102600]=384815,[102616]=391142,[102475]=383388,[114830]=383344,[114824]=403696,[115482]=385414,[114292]=231644,[102457]=386653,[102473]=204077,[115239]=403479,[102505]=405461,[115016]=198034,[102537]=148039,[102553]=387786,[102569]=31884,[102585]=20066,[102601]=385414,[102617]=385728,[115475]=407067,[102485]=404834,[114831]=215661,[115479]=305394,[115447]=406468,[102458]=392928,[102474]=327193,[102586]=385633,[102506]=404512,[111886]=204018,[102538]=388018,[102554]=392914,[102570]=387805,[114826]=383314,[102602]=6940,[114828]=404436,[115435]=343527,[102521]=403826,[115438]=387170,[102526]=403654,[102443]=386738,[102459]=204054,[115480]=385414,[102491]=383228,[115477]=405607,[115452]=383396,[102539]=387814,[102555]=387993,[102571]=231642,[102587]=1044,[102603]=114154,[102619]=385349,[115457]=406835,[115468]=384027,[115672]=409441,[115474]=404542,[102444]=379008,[102460]=380188,[115481]=326734,[115483]=406154, },
	[786]={ [101982]=192063,[101998]=5394,[101807]=333974,[101823]=33757,[101839]=384363,[101855]=61882,[101871]=385923,[101887]=378266,[101919]=200071,[101935]=382021,[101951]=1064,[101967]=378773,[101983]=58875,[101999]=378094,[114813]=383222,[101824]=384352,[101840]=187874,[101856]=378776,[101872]=333919,[101888]=378255,[101904]=77472,[101920]=381946,[101936]=382315,[101952]=198103,[101968]=370,[101984]=381678,[102000]=108281,[101809]=201900,[101825]=319930,[101841]=197214,[101857]=381743,[101873]=262303,[101889]=381726,[101905]=61295,[101937]=197995,[101953]=378077,[101985]=383012,[102001]=381930,[101810]=196884,[101826]=384355,[101842]=207778,[101858]=378241,[101874]=273221,[101890]=382032,[101906]=200076,[101922]=378443,[101938]=378270,[101954]=192088,[101970]=378079,[101986]=383011,[102002]=381867,[101811]=390370,[101827]=210853,[101843]=386443,[101859]=382685,[101875]=381787,[101891]=375982,[101923]=73920,[101939]=382194,[101955]=79206,[101971]=204268,[101987]=108285,[102003]=383010,[114291]=114051,[114817]=404522,[101828]=382042,[101844]=382042,[101860]=191634,[101876]=381785,[101892]=191861,[101924]=236501,[101956]=382886,[101972]=51514,[101988]=382033,[102004]=974,[101813]=384444,[101829]=384405,[101845]=386474,[101861]=381936,[101877]=114050,[101893]=381707,[101909]=207401,[101925]=157154,[101941]=382020,[101957]=57994,[101973]=108287,[101989]=383013,[114819]=382947,[101830]=375982,[101846]=77756,[101862]=384087,[101878]=378270,[101894]=77756,[101910]=382039,[101926]=382045,[101942]=114052,[101958]=8143,[101974]=30884,[101990]=382201,[101799]=381666,[101815]=384450,[101831]=117014,[101847]=381764,[101863]=191634,[101879]=16166,[101895]=382030,[101911]=382732,[101927]=382309,[101943]=377933,[101959]=381819,[101975]=51485,[101991]=383019,[101800]=393905,[101816]=378270,[101832]=392352,[101848]=378211,[101864]=210689,[101880]=381782,[101896]=16166,[101912]=108280,[101928]=333919,[101944]=381647,[101960]=265046,[101976]=192077,[101992]=383017,[101801]=384149,[101833]=390288,[101849]=192249,[101865]=378271,[101881]=378310,[101897]=378211,[101913]=98008,[101929]=16191,[101945]=108271,[101961]=192058,[101993]=305483,[101802]=384143,[101818]=334308,[101834]=262647,[101850]=198067,[101866]=117014,[101882]=378268,[101898]=280614,[101914]=382040,[101930]=207399,[101946]=382197,[101962]=378075,[101978]=381650,[101994]=378779,[101803]=8512,[101819]=344357,[101835]=198434,[101851]=381666,[101867]=381708,[101883]=381932,[101899]=51564,[101915]=382046,[101931]=198838,[101947]=382888,[101963]=260878,[101979]=381689,[101995]=51490,[101804]=17364,[101820]=384359,[101836]=262624,[101852]=378193,[101868]=382086,[101884]=192222,[101900]=5394,[101916]=382191,[101932]=200072,[101948]=187880,[101964]=383016,[101980]=381655,[101808]=334195,[114810]=404019,[101805]=60103,[101821]=342240,[101837]=384447,[101853]=60188,[101869]=381776,[101885]=117013,[101901]=383009,[101917]=375982,[101933]=157153,[101949]=188443,[101965]=196840,[101981]=382215,[101997]=378081,[114818]=404539,[101814]=384411,[101806]=334033,[114811]=404015,[101822]=383303,[101838]=51533,[101854]=8042,[101870]=210714,[101886]=382027,[101902]=16196,[101918]=73685,[101934]=382482,[101950]=51505,[101966]=51886,[101812]=334046, },
	[720]={ [91527]=387485,[91543]=104316,[91559]=386922,[91575]=196103,[91591]=116858,[91432]=171975,[91448]=386256,[91464]=386613,[91480]=387400,[91496]=205148,[91512]=387600,[91528]=387399,[91544]=264178,[91560]=196226,[91576]=108503,[91592]=5740,[91433]=108415,[91449]=386646,[91465]=389609,[91481]=387173,[91497]=387522,[91513]=387578,[91529]=405798,[91545]=387322,[91561]=405330,[91577]=386976,[91434]=386689,[91450]=384069,[91466]=111771,[91482]=387252,[91498]=387509,[91514]=387526,[91530]=387396,[91546]=386185,[91562]=199471,[91578]=386997,[91419]=389992,[91435]=386620,[91451]=264874,[91467]=386659,[91483]=387156,[91499]=196408,[91515]=267217,[91531]=111898,[91547]=267216,[91563]=399668,[91579]=387016,[91420]=389775,[91436]=386858,[91452]=30283,[91468]=317138,[91484]=108503,[91500]=387384,[91516]=387445,[91532]=387338,[91548]=603,[91564]=405327,[91580]=264000,[91421]=389359,[91469]=385899,[91485]=387259,[91501]=196412,[91517]=387391,[91533]=267170,[91549]=387483,[91565]=32388,[91581]=388827,[91422]=386648,[91438]=288843,[91454]=710,[91470]=387475,[91486]=388832,[91502]=1122,[91518]=387432,[91534]=386200,[91550]=265187,[91566]=198590,[91582]=17877,[91423]=387976,[91439]=333889,[91471]=387084,[91487]=152108,[91503]=389764,[91519]=387349,[91535]=205145,[91551]=387075,[91567]=334319,[91583]=387108,[91424]=389590,[91440]=386113,[91456]=386864,[91472]=266086,[91488]=270545,[91504]=387273,[91520]=196277,[91536]=386194,[91552]=48181,[91568]=108558,[91584]=387103,[91425]=389367,[91441]=268358,[91457]=6789,[91473]=387355,[115459]=56244,[91505]=387084,[91521]=264130,[91537]=264057,[91553]=387065,[91569]=316099,[91585]=387166,[91426]=389576,[91442]=328774,[91458]=5484,[91474]=387569,[115460]=386833,[91506]=387301,[91522]=387541,[91538]=264119,[91554]=205180,[91570]=324536,[91586]=196447,[91427]=386344,[91443]=387972,[91459]=386110,[91475]=387165,[115461]=405936,[91507]=387250,[91523]=405670,[91539]=264078,[91555]=386986,[91571]=27243,[91587]=231793,[91428]=389630,[91444]=108416,[91460]=111400,[91476]=387159,[115462]=405955,[91508]=387084,[91524]=387549,[91540]=267171,[91556]=278350,[91572]=196102,[91588]=205184,[91429]=389761,[91445]=386686,[91461]=386124,[91477]=387153,[91493]=80240,[91509]=390173,[91525]=387602,[91541]=267211,[91557]=205179,[91573]=386759,[91589]=196406,[91430]=386617,[91446]=386664,[91462]=386105,[91478]=387279,[91494]=387506,[91510]=334585,[91526]=387494,[91542]=386174,[91558]=386951,[91574]=63106,[91590]=17962,[91489]=387095,[91490]=387093,[91491]=387176,[91431]=215941,[91447]=385881,[91463]=219272,[91479]=387275,[91495]=266134,[91511]=267214,[91492]=6353, },
}

local talentIDFix = { [103211]=377779,[103216]=343240,[103224]=377623, }
local talentChargeFix = { [36554]=true,[191634]=true,[47568]=true, }

local MAX_NUM_TALENTS = MAX_NUM_TALENTS or (E.isWOTLKC and 31 or 25)

local GetSelectedTalentData = (E.isDF and function(info, inspectUnit, isInspect)
	local list, c
	if not isInspect then
		list, c = { CM.SERIALIZATION_VERSION, true, "^T" }, 4
	end

	for i = 1, 3 do
		local talentID
		if isInspect then
			talentID = C_SpecializationInfo_GetInspectSelectedPvpTalent(inspectUnit, i)
		else
			local slotInfo = C_SpecializationInfo_GetPvpTalentSlotInfo(i)
			talentID = slotInfo and slotInfo.selectedTalentID
		end
		if talentID then
			local _,_,_,_,_, spellID = GetPvpTalentInfoByID(talentID)
			info.talentData[spellID] = "PVP"
			if list then
				list[c] = -spellID
				c = c + 1
			end
		end
	end

	local configID = isInspect and Constants.TraitConsts.INSPECT_TRAIT_CONFIG_ID or C_ClassTalents.GetActiveConfigID()
	local configInfo = configID and C_Traits.GetConfigInfo(configID)
	if not configInfo then
		return list
	end
	local treeID = configInfo.treeIDs[1]
	local nodeEntryIDs = treeNodeEntryIDs[treeID]
	local nodeSpellIDs = treeNodeSpellIDs[treeID]
	local treeNodes = C_Traits.GetTreeNodes(treeID)
	for _, treeNodeID in ipairs(treeNodes) do
		local treeNode = C_Traits_GetNodeInfo(configID, treeNodeID)
		local activeEntry = treeNode.activeEntry
		if activeEntry then
			local activeRank = treeNode.activeRank
			if activeRank > 0 then
				local activeEntryID = activeEntry.entryID
				local spellID = talentIDFix[activeEntryID] or (nodeEntryIDs and nodeEntryIDs[activeEntryID])
				if spellID then
					activeRank = talentChargeFix[spellID] and info.talentData[spellID] and 2 or activeRank
					info.talentData[spellID] = activeRank
					if list then
						spellID = nodeSpellIDs[spellID] or spellID
						list[c] = activeRank > 1 and format("%s:%s", spellID, activeRank) or spellID
						c = c + 1
					end
				end
			end
		end
	end

	return list
end) or (E.isSL and function(info, inspectUnit, isInspect)
	local list
	if not isInspect then
		list = { CM.SERIALIZATION_VERSION, true, "^T" }
	end

	for i = 1, 3 do
		local talentID
		if isInspect then
			talentID = C_SpecializationInfo_GetInspectSelectedPvpTalent(inspectUnit, i)
		else
			local slotInfo = C_SpecializationInfo_GetPvpTalentSlotInfo(i)
			talentID = slotInfo and slotInfo.selectedTalentID
		end
		if talentID then
			local _,_,_,_,_, spellID = GetPvpTalentInfoByID(talentID)
			info.talentData[spellID] = "PVP"
			if list then list[#list + 1] = -spellID end
		end
	end

	local specGroupIndex = 1
	for tier = 1, MAX_TALENT_TIERS do
		for column = 1, NUM_TALENT_COLUMNS do
			local _,_,_, selected, _, spellID = GetTalentInfo(tier, column, specGroupIndex , isInspect, inspectUnit)
			if selected then
				info.talentData[spellID] = true
				if list then list[#list + 1] = spellID end
				break
			end
		end
	end

	return list
end) or (E.isWOTLKC and function(info, inspectUnit, isInspect)
	local list
	if not isInspect then
		list = { CM.SERIALIZATION_VERSION, true, "^T" }
	end

	if list then
		for i = 1, 6 do
			local _,_, glyphSpellID = GetGlyphSocketInfo(i)
			if glyphSpellID then
				info.talentData[glyphSpellID] = true
				list[#list + 1] = glyphSpellID
			end
		end
	end

	local talentGroup = GetActiveTalentGroup and GetActiveTalentGroup(isInspect, nil)
	for tabIndex = 1, 3 do
		for talentIndex = 1, MAX_NUM_TALENTS do
			local name, _,_,_, currentRank = GetTalentInfo(tabIndex, talentIndex, isInspect, inspectUnit, talentGroup)
			if not name then
				break
			end
			if currentRank > 0 then
				local talentRankIDs = E.talentNameToRankIDs[name]
				if talentRankIDs then
					if type(talentRankIDs[1]) == "table" then
						for _, t in pairs(talentRankIDs) do
							local talentID = t[currentRank]
							if talentID then
								info.talentData[talentID] = true
								if list then list[#list + 1] = talentID end
							end
						end
					else
						local talentID = talentRankIDs[currentRank]
						if talentID then
							info.talentData[talentID] = true
							if list then list[#list + 1] = talentID end
						end
					end
				end
			end
		end
	end

	return list
end) or function(info, inspectUnit, isInspect)
	if E.isClassic and isInspect then
		return
	end

	local list
	if not isInspect then
		list = { CM.SERIALIZATION_VERSION, true, "^T" }
	end

	for tabIndex = 1, 3 do
		for talentIndex = 1, MAX_NUM_TALENTS do
			local name, _,_,_, currentRank = GetTalentInfo(tabIndex, talentIndex, isInspect, inspectUnit)
			if not name then
				break
			end
			if currentRank > 0 then
				local talentRankIDs = E.talentNameToRankIDs[name]
				if talentRankIDs then
					if type(talentRankIDs[1]) == "table" then
						for _, t in pairs(talentRankIDs) do
							local talentID = t[currentRank]
							if talentID then
								info.talentData[talentID] = true
								if list then list[#list + 1] = talentID end
							end
						end
					else
						local talentID = talentRankIDs[currentRank]
						if talentID then
							info.talentData[talentID] = true
							if list then list[#list + 1] = talentID end
						end
					end
				end
			end
		end
	end

	return list
end

function CM:InspectUnit(guid)
	local info = P.groupInfo[guid]
	if not info or self.syncedGroupMembers[guid] then
		ClearInspectPlayer()
		return
	end

	local inspectUnit = info.unit
	local specID = E.preCata and info.raceID or GetInspectSpecialization(inspectUnit)
	if not specID or specID == 0 then
		return
	end
	info.spec = specID
	if info.name == "" or info.name == "Unknown" then
		info.name = GetUnitName(inspectUnit, true)
	end
	if info.level == 200 then
		local lvl = UnitLevel(inspectUnit)
		if lvl > 0 then
			info.level = lvl
		end
	end
	if not E.preCata then
		info.spellHasteMult = 1/(1 + UnitSpellHaste(info.unit)/100)
	end

	wipe(info.talentData)
	wipe(info.itemData)

	GetSelectedTalentData(info, inspectUnit, true)
	local failed = GetEquippedItemData(info, inspectUnit, specID)

	ClearInspectPlayer()
	self:DequeueInspect(guid, failed)
	P:UpdateUnitBar(guid)
end

local enhancedSoulbindRowRenownLevel = {
	[1]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[2]  = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[3]  = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
	[4]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[5]  = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[6]  = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
	[7]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[8]  = { [1] = 63, [3] = 66, [5] = 68, [6] = 72, [8] = 73, [10] = 78 },
	[9]  = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[10] = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
	[13] = { [1] = 61, [3] = 64, [5] = 67, [6] = 70, [8] = 75, [10] = 79 },
	[18] = { [1] = 62, [3] = 65, [5] = 69, [6] = 71, [8] = 74, [10] = 77 },
}

local function IsSoulbindRowEnhanced(soulbindID, row, renownLevel)
	local minLevel = enhancedSoulbindRowRenownLevel[soulbindID] and enhancedSoulbindRowRenownLevel[soulbindID][row]
	if minLevel then
		return renownLevel >= minLevel
	end
end

local function GetCovenantSoulbindData(info, list)
	wipe(info.shadowlandsData)

	local covenantID = C_Covenants.GetActiveCovenantID()
	if covenantID == 0 then
		return
	end

	local covenantSpellID = E.covenant_to_spellid[covenantID]
	info.shadowlandsData.covenantID = covenantID
	info.talentData[covenantSpellID] = "C"
	list[#list + 1] = "^C," .. covenantID

	local soulbindID = C_Soulbinds.GetActiveSoulbindID()
	if soulbindID == 0 then
		return
	end
	info.shadowlandsData.soulbindID = soulbindID
	list[#list + 1] = soulbindID

	local soulbindData = C_Soulbinds.GetSoulbindData(soulbindID)
	local nodes = soulbindData.tree and soulbindData.tree.nodes
	if not nodes then
		return
	end

	local renownLevel = C_CovenantSanctumUI.GetRenownLevel()
	for i = 1, #nodes do
		local node = nodes[i]
		if node.state == Enum.SoulbindNodeState.Selected then
			local conduitID, conduitRank, row, spellID = node.conduitID, node.conduitRank, node.row, node.spellID
			if conduitID ~= 0 then
				spellID = C_Soulbinds_GetConduitSpellID(conduitID, conduitRank)
				if IsSoulbindRowEnhanced(soulbindID, row, renownLevel) then
					conduitRank = conduitRank + 2
				end
				local rankValue = E.soulbind_conduits_rank[spellID] and (E.soulbind_conduits_rank[spellID][conduitRank] or E.soulbind_conduits_rank[spellID][1])
				if rankValue then
					info.talentData[spellID] = rankValue
					list[#list + 1] = format("%s:%s", spellID, rankValue)
				end
			elseif E.soulbind_abilities[spellID] then
				info.talentData[spellID] = 0
				list[#list + 1] = spellID
			end
		end
	end
end

local function FindValidSpellID(info, v)
	if type(v) ~= "table" then
		return info.spec == v or (info.talentData[v] and true)
	end
	if v[1] > 0 then
		for id in pairs(v) do
			if info.talentData[id] then
				return true
			end
		end
	else
		local spellID
		for i = 1, #v, 2 do
			local tid, sid = v[i], v[i + 1]
			tid = i == 1 and -tid or tid
			spellID = info.talentData[tid] and sid
		end
		return spellID or true
	end
end

function CM:UpdateCooldownSyncIDs(info)
	if E.preCata or info.isAdminObsForMDI then return end
	wipe(self.cooldownSyncIDs)
	for id, t in E.pairs(E.sync_cooldowns.ALL, E.sync_cooldowns[E.userClass]) do
		local spellID
		for _, v in ipairs(t) do
			spellID = not v or FindValidSpellID(info, v)
			if not spellID then break end
		end
		if spellID then
			self.cooldownSyncIDs[spellID == true and id or spellID] = { 0, 0 }
		end
	end
	self:ToggleCooldownSync()
end

function CM:InspectUser()
	local info = P.userInfo
	local specID
	if E.preCata then
		specID = info.raceID
	else
		local specIndex = GetSpecialization()
		specID = GetSpecializationInfo(specIndex)
	end
	if not specID or specID == 0 then
		return false
	end
	info.spec = specID

	wipe(info.talentData)
	wipe(info.itemData)

	local dataList = GetSelectedTalentData(info, "player")
	GetEquippedItemData(info, "player", specID, dataList)
	if E.postBFA then
		GetCovenantSoulbindData(info, dataList)
		info.spellHasteMult = 1/(1 + UnitSpellHaste("player")/100)

	elseif E.isClassic or E.isBCC then
		local speed = UnitRangedDamage("player")
		if speed and speed > 0 then
			info.rangedWeaponSpeed = speed
			dataList[#dataList + 1] = -speed
		end
	end

	dataList[2] = specID
	local serializedData = concat(dataList, ","):gsub(",%^", "^")
	local compressedData = LibDeflate:CompressDeflate(serializedData)
	local encodedData = LibDeflate:EncodeForWoWAddonChannel(compressedData)
	self.serializedSyncData = encodedData

	self:UpdateCooldownSyncIDs(info)

	if P.groupInfo[E.userGUID] then
		P:UpdateUnitBar(E.userGUID)
	end

	return true
end
